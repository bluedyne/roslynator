// Copyright (c) .NET Foundation and Contributors. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

using System;
using Microsoft.CodeAnalysis;

namespace Roslynator
{
    internal static partial class DiagnosticDescriptors
    {
        /// <summary>RCS0001</summary>
        public static readonly DiagnosticDescriptor RCS0001_AddBlankLineAfterEmbeddedStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0001", 
            title:              "Add blank line after embedded statement", 
            messageFormat:      "Add blank line after embedded statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0001", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0002</summary>
        public static readonly DiagnosticDescriptor RCS0002_AddBlankLineAfterRegionDirective = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0002", 
            title:              "Add blank line after #region", 
            messageFormat:      "Add blank line after #region", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0002", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0003</summary>
        public static readonly DiagnosticDescriptor RCS0003_AddBlankLineAfterUsingDirectiveList = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0003", 
            title:              "Add blank line after using directive list", 
            messageFormat:      "Add blank line after using directive list", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0003", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0005</summary>
        public static readonly DiagnosticDescriptor RCS0005_AddBlankLineBeforeEndRegionDirective = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0005", 
            title:              "Add blank line before #endregion", 
            messageFormat:      "Add blank line before #endregion", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0005", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0006</summary>
        public static readonly DiagnosticDescriptor RCS0006_AddBlankLineBeforeUsingDirectiveList = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0006", 
            title:              "Add blank line before using directive list", 
            messageFormat:      "Add blank line before using directive list", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0006", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0007</summary>
        public static readonly DiagnosticDescriptor RCS0007_AddBlankLineBetweenAccessors = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0007", 
            title:              "Add blank line between accessors", 
            messageFormat:      "Add blank line between accessors", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0007", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0008</summary>
        public static readonly DiagnosticDescriptor RCS0008_AddBlankLineBetweenClosingBraceAndNextStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0008", 
            title:              "Add blank line between closing brace and next statement", 
            messageFormat:      "Add blank line between closing brace and next statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0008", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0009</summary>
        public static readonly DiagnosticDescriptor RCS0009_AddBlankLineBetweenDeclarationAndDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0009", 
            title:              "Add blank line between declaration and documentation comment", 
            messageFormat:      "Add blank line between declaration and documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0009", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0010</summary>
        public static readonly DiagnosticDescriptor RCS0010_AddBlankLineBetweenDeclarations = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0010", 
            title:              "Add blank line between declarations", 
            messageFormat:      "Add blank line between declarations", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0010", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0011</summary>
        public static readonly DiagnosticDescriptor RCS0011_BlankLineBetweenSingleLineAccessors = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0011", 
            title:              "Add/remove blank line between single-line accessors", 
            messageFormat:      "{0} blank line between single-line accessors", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0011", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0012</summary>
        public static readonly DiagnosticDescriptor RCS0012_AddBlankLineBetweenSingleLineDeclarations = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0012", 
            title:              "Add blank line between single-line declarations", 
            messageFormat:      "Add blank line between single-line declarations", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0012", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0013</summary>
        public static readonly DiagnosticDescriptor RCS0013_AddBlankLineBetweenSingleLineDeclarationsOfDifferentKind = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0013", 
            title:              "Add blank line between single-line declarations of different kind", 
            messageFormat:      "Add blank line between single-line declarations of different kind", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0013", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0014</summary>
        public static readonly DiagnosticDescriptor RCS0014_AddBlankLineBetweenSwitchSections = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0014", 
            title:              "[deprecated] Add blank line between switch sections", 
            messageFormat:      "([deprecated] Use RCS0061 instead) Add blank line between switch sections", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0014", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0015</summary>
        public static readonly DiagnosticDescriptor RCS0015_BlankLineBetweenUsingDirectives = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0015", 
            title:              "Add/remove blank line between using directives", 
            messageFormat:      "{0} blank line between using directives", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0015", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0016</summary>
        public static readonly DiagnosticDescriptor RCS0016_PutAttributeListOnItsOwnLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0016", 
            title:              "Put attribute list on its own line", 
            messageFormat:      "Put attribute list on its own line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0016", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0020</summary>
        public static readonly DiagnosticDescriptor RCS0020_FormatAccessorBraces = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0020", 
            title:              "Format accessor's braces on a single line or multiple lines", 
            messageFormat:      "Format braces on {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0020", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0021</summary>
        public static readonly DiagnosticDescriptor RCS0021_FormatBlockBraces = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0021", 
            title:              "Format block's braces on a single line or multiple lines", 
            messageFormat:      "Format braces on {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0021", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0022</summary>
        public static readonly DiagnosticDescriptor RCS0022_AddNewLineAfterOpeningBraceOfEmptyBlock = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0022", 
            title:              "[deprecated] Add new line after opening brace of empty block", 
            messageFormat:      "([deprecated] Use RCS0021 instead) Format braces on multiple lines", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0022", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0023</summary>
        public static readonly DiagnosticDescriptor RCS0023_FormatTypeDeclarationBraces = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0023", 
            title:              "Format type declaration's braces", 
            messageFormat:      "Format type declaration's braces", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0023", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0024</summary>
        public static readonly DiagnosticDescriptor RCS0024_AddNewLineAfterSwitchLabel = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0024", 
            title:              "Add new line after switch label", 
            messageFormat:      "Add new line after switch label", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0024", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0025</summary>
        public static readonly DiagnosticDescriptor RCS0025_PutFullAccessorOnItsOwnLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0025", 
            title:              "Put full accessor on its own line", 
            messageFormat:      "Put full accessor on its own line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0025", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0027</summary>
        public static readonly DiagnosticDescriptor RCS0027_PlaceNewLineAfterOrBeforeBinaryOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0027", 
            title:              "Place new line after/before binary operator", 
            messageFormat:      "Place new line {0} binary operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0027", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0028</summary>
        public static readonly DiagnosticDescriptor RCS0028_PlaceNewLineAfterOrBeforeConditionalOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0028", 
            title:              "Place new line after/before '?:' operator", 
            messageFormat:      "Place new line {0} operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0028", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0029</summary>
        public static readonly DiagnosticDescriptor RCS0029_PutConstructorInitializerOnItsOwnLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0029", 
            title:              "Put constructor initializer on its own line", 
            messageFormat:      "Put constructor initializer on its own line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0029", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0030</summary>
        public static readonly DiagnosticDescriptor RCS0030_PutEmbeddedStatementOnItsOwnLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0030", 
            title:              "Put embedded statement on its own line", 
            messageFormat:      "Put embedded statement on its own line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0030", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0031</summary>
        public static readonly DiagnosticDescriptor RCS0031_PutEnumMemberOnItsOwnLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0031", 
            title:              "Put enum member on its own line", 
            messageFormat:      "Put enum member on its own line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0031", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0032</summary>
        public static readonly DiagnosticDescriptor RCS0032_PlaceNewLineAfterOrBeforeArrowToken = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0032", 
            title:              "Place new line after/before arrow token", 
            messageFormat:      "Place new line {0} arrow token", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0032", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0033</summary>
        public static readonly DiagnosticDescriptor RCS0033_PutStatementOnItsOwnLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0033", 
            title:              "Put statement on its own line", 
            messageFormat:      "Put statement on its own line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0033", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0034</summary>
        public static readonly DiagnosticDescriptor RCS0034_PutTypeParameterConstraintOnItsOwnLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0034", 
            title:              "Put type parameter constraint on its own line", 
            messageFormat:      "Put type parameter constraint on its own line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0034", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0036</summary>
        public static readonly DiagnosticDescriptor RCS0036_RemoveBlankLineBetweenSingleLineDeclarationsOfSameKind = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0036", 
            title:              "Remove blank line between single-line declarations of same kind", 
            messageFormat:      "Remove blank line between single-line declarations of same kind", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0036", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0038</summary>
        public static readonly DiagnosticDescriptor RCS0038_RemoveBlankLineBetweenUsingDirectivesWithSameRootNamespace = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0038", 
            title:              "[deprecated] Remove blank line between using directives with same root namespace", 
            messageFormat:      "([deprecated] Use RCS0015 instead) Remove blank line between using directives", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0038", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0039</summary>
        public static readonly DiagnosticDescriptor RCS0039_RemoveNewLineBeforeBaseList = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0039", 
            title:              "Remove new line before base list", 
            messageFormat:      "Remove new line before base list", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0039", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0041</summary>
        public static readonly DiagnosticDescriptor RCS0041_RemoveNewLineBetweenIfKeywordAndElseKeyword = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0041", 
            title:              "Remove new line between 'if' keyword and 'else' keyword", 
            messageFormat:      "Remove new line between 'if' keyword and 'else' keyword", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0041", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0042</summary>
        public static readonly DiagnosticDescriptor RCS0042_PutAutoAccessorsOnSingleLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0042", 
            title:              "Put auto-accessors on a single line", 
            messageFormat:      "Put auto-accessors on a single line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0042", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0043</summary>
        public static readonly DiagnosticDescriptor RCS0043_FormatAccessorBracesOnSingleLineWhenExpressionIsOnSingleLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0043", 
            title:              "[deprecated] Format accessor's braces on a single line when expression is on single line", 
            messageFormat:      "([deprecated] Use RCS0020 with option 'roslynator_accessor_braces_style = single_line_when_expression_is_on_single_line') Format braces on a single line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0043", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0044</summary>
        public static readonly DiagnosticDescriptor RCS0044_UseCarriageReturnAndLinefeedAsNewLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0044", 
            title:              "Use carriage return + linefeed as new line", 
            messageFormat:      "Use carriage return + linefeed as new line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0044", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0045</summary>
        public static readonly DiagnosticDescriptor RCS0045_UseLinefeedAsNewLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0045", 
            title:              "Use linefeed as new line", 
            messageFormat:      "Use linefeed as new line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0045", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0046</summary>
        public static readonly DiagnosticDescriptor RCS0046_UseSpacesInsteadOfTab = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0046", 
            title:              "Use spaces instead of tab", 
            messageFormat:      "Use spaces instead of tab", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0046", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0047</summary>
        public static readonly DiagnosticDescriptor RCS0047_WrapAndIndentEachNodeInList = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0047", 
            title:              "[deprecated] Wrap and indent each node in list", 
            messageFormat:      "([deprecated] Use RCS0053 instead) Wrap and indent each node in list", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0047", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0048</summary>
        public static readonly DiagnosticDescriptor RCS0048_PutInitializerOnSingleLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0048", 
            title:              "Put initializer on a single line", 
            messageFormat:      "Put initializer on a single line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0048", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0049</summary>
        public static readonly DiagnosticDescriptor RCS0049_AddBlankLineAfterTopComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0049", 
            title:              "Add blank line after top comment", 
            messageFormat:      "Add blank line after top comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0049", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0050</summary>
        public static readonly DiagnosticDescriptor RCS0050_AddBlankLineBeforeTopDeclaration = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0050", 
            title:              "Add blank line before top declaration", 
            messageFormat:      "Add blank line before top declaration", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0050", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0051</summary>
        public static readonly DiagnosticDescriptor RCS0051_AddOrRemoveNewLineBeforeWhileInDoStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0051", 
            title:              "Add/remove new line before 'while' in 'do' statement", 
            messageFormat:      "{0} new line before 'while' in 'do' statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0051", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0052</summary>
        public static readonly DiagnosticDescriptor RCS0052_PlaceNewLineAfterOrBeforeEqualsToken = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0052", 
            title:              "Place new line after/before equals token", 
            messageFormat:      "Place new line {0} equals token", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0052", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0053</summary>
        public static readonly DiagnosticDescriptor RCS0053_FixFormattingOfList = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0053", 
            title:              "Fix formatting of a list", 
            messageFormat:      "Fix formatting of {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0053", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0054</summary>
        public static readonly DiagnosticDescriptor RCS0054_FixFormattingOfCallChain = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0054", 
            title:              "Fix formatting of a call chain", 
            messageFormat:      "Fix formatting of a call chain", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0054", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0055</summary>
        public static readonly DiagnosticDescriptor RCS0055_FixFormattingOfBinaryExpressionChain = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0055", 
            title:              "Fix formatting of a binary expression chain", 
            messageFormat:      "Fix formatting of a binary expression chain", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0055", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0056</summary>
        public static readonly DiagnosticDescriptor RCS0056_LineIsTooLong = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0056", 
            title:              "A line is too long", 
            messageFormat:      "A line is too long ({0} characters)", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0056", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0057</summary>
        public static readonly DiagnosticDescriptor RCS0057_NormalizeWhitespaceAtBeginningOfFile = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0057", 
            title:              "Normalize whitespace at the beginning of a file", 
            messageFormat:      "Normalize whitespace at the beginning of a file", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0057", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0058</summary>
        public static readonly DiagnosticDescriptor RCS0058_NormalizeWhitespaceAtEndOfFile = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0058", 
            title:              "Normalize whitespace at the end of a file", 
            messageFormat:      "Normalize whitespace at the end of a file", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0058", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0059</summary>
        public static readonly DiagnosticDescriptor RCS0059_PlaceNewLineAfterOrBeforeNullConditionalOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0059", 
            title:              "Place new line after/before null-conditional operator", 
            messageFormat:      "Place new line {0} null-conditional operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0059", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0060</summary>
        public static readonly DiagnosticDescriptor RCS0060_BlankLineAfterFileScopedNamespaceDeclaration = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0060", 
            title:              "Add/remove line after file scoped namespace declaration", 
            messageFormat:      "{0} line after file scoped namespace declaration", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0060", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS0061</summary>
        public static readonly DiagnosticDescriptor RCS0061_BlankLineBetweenSwitchSections = DiagnosticDescriptorFactory.Create(
            id:                 "RCS0061", 
            title:              "Add/remove blank line between switch sections", 
            messageFormat:      "{0} blank line between switch sections", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS0061", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1001</summary>
        public static readonly DiagnosticDescriptor RCS1001_AddBracesWhenExpressionSpansOverMultipleLines = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1001", 
            title:              "Add braces (when expression spans over multiple lines)", 
            messageFormat:      "Add braces to {0} (when expression spans over multiple lines)", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1001", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1002</summary>
        public static readonly DiagnosticDescriptor RCS1002_RemoveBraces = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1002", 
            title:              "Remove braces", 
            messageFormat:      "Remove braces from {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1002", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1002_RemoveBracesFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1002_RemoveBraces);

        /// <summary>RCS1003</summary>
        public static readonly DiagnosticDescriptor RCS1003_AddBracesToIfElseWhenExpressionSpansOverMultipleLines = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1003", 
            title:              "Add braces to if-else (when expression spans over multiple lines)", 
            messageFormat:      "Add braces to if-else (when expression spans over multiple lines)", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1003", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1004</summary>
        public static readonly DiagnosticDescriptor RCS1004_RemoveBracesFromIfElse = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1004", 
            title:              "Remove braces from if-else", 
            messageFormat:      "Remove braces from if-else", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1004", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1004_RemoveBracesFromIfElseFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1004_RemoveBracesFromIfElse);

        /// <summary>RCS1005</summary>
        public static readonly DiagnosticDescriptor RCS1005_SimplifyNestedUsingStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1005", 
            title:              "Simplify nested using statement", 
            messageFormat:      "Simplify nested using statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1005", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1005_SimplifyNestedUsingStatementFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1005_SimplifyNestedUsingStatement);

        /// <summary>RCS1006</summary>
        public static readonly DiagnosticDescriptor RCS1006_MergeElseWithNestedIf = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1006", 
            title:              "Merge 'else' with nested 'if'", 
            messageFormat:      "Merge 'else' with nested 'if'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1006", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1006_MergeElseWithNestedIfFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1006_MergeElseWithNestedIf);

        /// <summary>RCS1007</summary>
        public static readonly DiagnosticDescriptor RCS1007_AddBraces = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1007", 
            title:              "Add braces", 
            messageFormat:      "Add braces to {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1007", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1008</summary>
        public static readonly DiagnosticDescriptor RCS1008_UseExplicitTypeInsteadOfVarWhenTypeIsNotObvious = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1008", 
            title:              "[deprecated] Use explicit type instead of 'var' (when the type is not obvious)", 
            messageFormat:      "([deprecated] Use RCS1264 instead) Use explicit type instead of 'var'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1008", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1009</summary>
        public static readonly DiagnosticDescriptor RCS1009_UseExplicitTypeInsteadOfVarInForEach = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1009", 
            title:              "[deprecated] Use explicit type instead of 'var' (foreach variable)", 
            messageFormat:      "([deprecated] Use RCS1264 instead) Use explicit type instead of 'var'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1009", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1010</summary>
        public static readonly DiagnosticDescriptor RCS1010_UseVarInsteadOfExplicitTypeWhenTypeIsObvious = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1010", 
            title:              "[deprecated] Use 'var' instead of explicit type (when the type is obvious)", 
            messageFormat:      "([deprecated] Use RCS1264 instead) Use 'var' instead of explicit type", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1010", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1012</summary>
        public static readonly DiagnosticDescriptor RCS1012_UseExplicitTypeInsteadOfVarWhenTypeIsObvious = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1012", 
            title:              "[deprecated] Use explicit type instead of 'var' (when the type is obvious)", 
            messageFormat:      "([deprecated] Use RCS1264 instead) Use explicit type instead of 'var'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1012", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1013</summary>
        public static readonly DiagnosticDescriptor RCS1013_UsePredefinedType = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1013", 
            title:              "Use predefined type", 
            messageFormat:      "Use predefined type", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1013", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1014</summary>
        public static readonly DiagnosticDescriptor RCS1014_UseExplicitlyOrImplicitlyTypedArray = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1014", 
            title:              "Use explicitly/implicitly typed array", 
            messageFormat:      "{0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1014", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1015</summary>
        public static readonly DiagnosticDescriptor RCS1015_UseNameOfOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1015", 
            title:              "Use nameof operator", 
            messageFormat:      "Use nameof operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1015", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1015_UseNameOfOperatorFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1015_UseNameOfOperator);

        /// <summary>RCS1016</summary>
        public static readonly DiagnosticDescriptor RCS1016_UseBlockBodyOrExpressionBody = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1016", 
            title:              "Use block body or expression body", 
            messageFormat:      "Use {0} body", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1016", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1018</summary>
        public static readonly DiagnosticDescriptor RCS1018_AddOrRemoveAccessibilityModifiers = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1018", 
            title:              "Add/remove accessibility modifiers", 
            messageFormat:      "{0} accessibility modifiers", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1018", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1019</summary>
        public static readonly DiagnosticDescriptor RCS1019_OrderModifiers = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1019", 
            title:              "Order modifiers", 
            messageFormat:      "Order modifiers", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1019", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1020</summary>
        public static readonly DiagnosticDescriptor RCS1020_SimplifyNullableOfT = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1020", 
            title:              "Simplify Nullable<T> to T?", 
            messageFormat:      "Simplify Nullable<T> to T?", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1020", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1021</summary>
        public static readonly DiagnosticDescriptor RCS1021_ConvertLambdaExpressionBodyToExpressionBody = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1021", 
            title:              "Convert lambda expression body to expression body", 
            messageFormat:      "Use expression-bodied lambda", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1021", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1021_ConvertLambdaExpressionBodyToExpressionBodyFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1021_ConvertLambdaExpressionBodyToExpressionBody);

        /// <summary>RCS1031</summary>
        public static readonly DiagnosticDescriptor RCS1031_RemoveUnnecessaryBracesInSwitchSection = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1031", 
            title:              "Remove unnecessary braces in switch section", 
            messageFormat:      "Remove unnecessary braces", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1031", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        public static readonly DiagnosticDescriptor RCS1031_RemoveUnnecessaryBracesInSwitchSectionFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1031_RemoveUnnecessaryBracesInSwitchSection);

        /// <summary>RCS1032</summary>
        public static readonly DiagnosticDescriptor RCS1032_RemoveRedundantParentheses = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1032", 
            title:              "Remove redundant parentheses", 
            messageFormat:      "Remove redundant parentheses", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1032", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1032_RemoveRedundantParenthesesFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1032_RemoveRedundantParentheses);

        /// <summary>RCS1033</summary>
        public static readonly DiagnosticDescriptor RCS1033_RemoveRedundantBooleanLiteral = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1033", 
            title:              "Remove redundant boolean literal", 
            messageFormat:      "Remove redundant '{0}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1033", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1034</summary>
        public static readonly DiagnosticDescriptor RCS1034_RemoveRedundantSealedModifier = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1034", 
            title:              "Remove redundant 'sealed' modifier", 
            messageFormat:      "Remove redundant 'sealed' modifier", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1034", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1035</summary>
        public static readonly DiagnosticDescriptor RCS1035_RemoveRedundantCommaInInitializer = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1035", 
            title:              "[deprecated] Remove redundant comma in initializer", 
            messageFormat:      "([deprecated] Use RCS1260 instead) Remove redundant comma in initializer", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1035", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1036</summary>
        public static readonly DiagnosticDescriptor RCS1036_RemoveUnnecessaryBlankLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1036", 
            title:              "Remove unnecessary blank line", 
            messageFormat:      "Remove unnecessary blank line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1036", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1037</summary>
        public static readonly DiagnosticDescriptor RCS1037_RemoveTrailingWhitespace = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1037", 
            title:              "Remove trailing white-space", 
            messageFormat:      "Remove trailing white-space", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1037", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1038</summary>
        public static readonly DiagnosticDescriptor RCS1038_RemoveEmptyStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1038", 
            title:              "[deprecated] Remove empty statement", 
            messageFormat:      "([deprecated] Use RCS1259 instead) Remove empty statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1038", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1039</summary>
        public static readonly DiagnosticDescriptor RCS1039_RemoveArgumentListFromAttribute = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1039", 
            title:              "Remove argument list from attribute", 
            messageFormat:      "Remove argument list from attribute", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1039", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1040</summary>
        public static readonly DiagnosticDescriptor RCS1040_RemoveEmptyElseClause = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1040", 
            title:              "[deprecated] Remove empty 'else' clause", 
            messageFormat:      "([deprecated] Use RCS1259 instead) Remove empty 'else' clause", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1040", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1041</summary>
        public static readonly DiagnosticDescriptor RCS1041_RemoveEmptyInitializer = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1041", 
            title:              "[deprecated] Remove empty initializer", 
            messageFormat:      "([deprecated] Use RCS1259 instead) Remove empty initializer", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1041", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1042</summary>
        public static readonly DiagnosticDescriptor RCS1042_RemoveEnumDefaultUnderlyingType = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1042", 
            title:              "Remove enum default underlying type", 
            messageFormat:      "Remove enum default underlying type", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1042", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1043</summary>
        public static readonly DiagnosticDescriptor RCS1043_RemovePartialModifierFromTypeWithSinglePart = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1043", 
            title:              "Remove 'partial' modifier from type with a single part", 
            messageFormat:      "Remove 'partial' modifier from type with a single part", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1043", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1044</summary>
        public static readonly DiagnosticDescriptor RCS1044_RemoveOriginalExceptionFromThrowStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1044", 
            title:              "Remove original exception from throw statement", 
            messageFormat:      "Remove original exception from throw statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1044", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1046</summary>
        public static readonly DiagnosticDescriptor RCS1046_AsynchronousMethodNameShouldEndWithAsync = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1046", 
            title:              "Asynchronous method name should end with 'Async'", 
            messageFormat:      "Add suffix 'Async' to asynchronous method name", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1046", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1047</summary>
        public static readonly DiagnosticDescriptor RCS1047_NonAsynchronousMethodNameShouldNotEndWithAsync = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1047", 
            title:              "Non-asynchronous method name should not end with 'Async'", 
            messageFormat:      "Remove suffix 'Async' from non-asynchronous method name", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1047", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1047_NonAsynchronousMethodNameShouldNotEndWithAsyncFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1047_NonAsynchronousMethodNameShouldNotEndWithAsync);

        /// <summary>RCS1048</summary>
        public static readonly DiagnosticDescriptor RCS1048_UseLambdaExpressionInsteadOfAnonymousMethod = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1048", 
            title:              "Use lambda expression instead of anonymous method", 
            messageFormat:      "Use lambda expression instead of anonymous method", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1048", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1048_UseLambdaExpressionInsteadOfAnonymousMethodFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1048_UseLambdaExpressionInsteadOfAnonymousMethod);

        /// <summary>RCS1049</summary>
        public static readonly DiagnosticDescriptor RCS1049_SimplifyBooleanComparison = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1049", 
            title:              "Simplify boolean comparison", 
            messageFormat:      "Simplify boolean comparison", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1049", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1049_SimplifyBooleanComparisonFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1049_SimplifyBooleanComparison);

        /// <summary>RCS1050</summary>
        public static readonly DiagnosticDescriptor RCS1050_IncludeParenthesesWhenCreatingNewObject = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1050", 
            title:              "Include/omit parentheses when creating new object", 
            messageFormat:      "{0} parentheses when creating new object", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1050", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1051</summary>
        public static readonly DiagnosticDescriptor RCS1051_AddOrRemoveParenthesesFromConditionInConditionalOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1051", 
            title:              "Add/remove parentheses from condition in conditional operator", 
            messageFormat:      "{0} parentheses {1} condition", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1051", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1052</summary>
        public static readonly DiagnosticDescriptor RCS1052_DeclareEachAttributeSeparately = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1052", 
            title:              "Declare each attribute separately", 
            messageFormat:      "Declare each attribute separately", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1052", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1055</summary>
        public static readonly DiagnosticDescriptor RCS1055_UnnecessarySemicolonAtEndOfDeclaration = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1055", 
            title:              "Unnecessary semicolon at the end of declaration", 
            messageFormat:      "Unnecessary semicolon at the end of declaration", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1055", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1056</summary>
        public static readonly DiagnosticDescriptor RCS1056_AvoidUsageOfUsingAliasDirective = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1056", 
            title:              "Avoid usage of using alias directive", 
            messageFormat:      "Avoid usage of using alias directive", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1056", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1058</summary>
        public static readonly DiagnosticDescriptor RCS1058_UseCompoundAssignment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1058", 
            title:              "Use compound assignment", 
            messageFormat:      "Use compound assignment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1058", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1058_UseCompoundAssignmentFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1058_UseCompoundAssignment);

        /// <summary>RCS1059</summary>
        public static readonly DiagnosticDescriptor RCS1059_AvoidLockingOnPubliclyAccessibleInstance = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1059", 
            title:              "Avoid locking on publicly accessible instance", 
            messageFormat:      "Lock on private field instead of locking on '{0}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1059", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1060</summary>
        public static readonly DiagnosticDescriptor RCS1060_DeclareEachTypeInSeparateFile = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1060", 
            title:              "Declare each type in separate file", 
            messageFormat:      "Declare each type in separate file", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1060", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1061</summary>
        public static readonly DiagnosticDescriptor RCS1061_MergeIfWithNestedIf = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1061", 
            title:              "Merge 'if' with nested 'if'", 
            messageFormat:      "Merge 'if' with nested 'if'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1061", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1061_MergeIfWithNestedIfFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1061_MergeIfWithNestedIf);

        /// <summary>RCS1063</summary>
        public static readonly DiagnosticDescriptor RCS1063_AvoidUsageOfDoStatementToCreateInfiniteLoop = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1063", 
            title:              "[deprecated] Avoid usage of do statement to create an infinite loop", 
            messageFormat:      "([deprecated] Use RCS1252 instead) Use while statement to create an infinite loop", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1063", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1064</summary>
        public static readonly DiagnosticDescriptor RCS1064_AvoidUsageOfForStatementToCreateInfiniteLoop = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1064", 
            title:              "[deprecated] Avoid usage of for statement to create an infinite loop", 
            messageFormat:      "([deprecated] Use RCS1252 instead) Use while statement to create an infinite loop", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1064", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1065</summary>
        public static readonly DiagnosticDescriptor RCS1065_AvoidUsageOfWhileStatementToCreateInfiniteLoop = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1065", 
            title:              "[deprecated] Avoid usage of while statement to create an infinite loop", 
            messageFormat:      "([deprecated] Use RCS1252 instead) Use for statement to create an infinite loop", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1065", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1066</summary>
        public static readonly DiagnosticDescriptor RCS1066_RemoveEmptyFinallyClause = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1066", 
            title:              "[deprecated] Remove empty 'finally' clause", 
            messageFormat:      "([deprecated] Use RCS1259 instead) Remove empty 'finally' clause", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1066", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        public static readonly DiagnosticDescriptor RCS1066_RemoveEmptyFinallyClauseFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1066_RemoveEmptyFinallyClause);

        /// <summary>RCS1068</summary>
        public static readonly DiagnosticDescriptor RCS1068_SimplifyLogicalNegation = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1068", 
            title:              "Simplify logical negation", 
            messageFormat:      "Simplify logical negation", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1068", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1069</summary>
        public static readonly DiagnosticDescriptor RCS1069_RemoveUnnecessaryCaseLabel = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1069", 
            title:              "Remove unnecessary case label", 
            messageFormat:      "Remove unnecessary case label", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1069", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1070</summary>
        public static readonly DiagnosticDescriptor RCS1070_RemoveRedundantDefaultSwitchSection = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1070", 
            title:              "Remove redundant default switch section", 
            messageFormat:      "Remove redundant default switch section", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1070", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1071</summary>
        public static readonly DiagnosticDescriptor RCS1071_RemoveRedundantBaseConstructorCall = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1071", 
            title:              "Remove redundant base constructor call", 
            messageFormat:      "Remove redundant base constructor call", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1071", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1072</summary>
        public static readonly DiagnosticDescriptor RCS1072_RemoveEmptyNamespaceDeclaration = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1072", 
            title:              "[deprecated] Remove empty namespace declaration", 
            messageFormat:      "([deprecated] Use RCS1259 instead) Remove empty namespace declaration", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1072", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1073</summary>
        public static readonly DiagnosticDescriptor RCS1073_ConvertIfToReturnStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1073", 
            title:              "Convert 'if' to 'return' statement", 
            messageFormat:      "Convert 'if' to 'return' statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1073", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1073_ConvertIfToReturnStatementFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1073_ConvertIfToReturnStatement);

        /// <summary>RCS1074</summary>
        public static readonly DiagnosticDescriptor RCS1074_RemoveRedundantConstructor = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1074", 
            title:              "Remove redundant constructor", 
            messageFormat:      "Remove redundant constructor", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1074", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1075</summary>
        public static readonly DiagnosticDescriptor RCS1075_AvoidEmptyCatchClauseThatCatchesSystemException = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1075", 
            title:              "Avoid empty catch clause that catches System.Exception", 
            messageFormat:      "Avoid empty catch clause that catches System.Exception", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1075", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1077</summary>
        public static readonly DiagnosticDescriptor RCS1077_OptimizeLinqMethodCall = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1077", 
            title:              "Optimize LINQ method call", 
            messageFormat:      "Optimize LINQ method call", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1077", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1078</summary>
        public static readonly DiagnosticDescriptor RCS1078_UseEmptyStringLiteralOrStringEmpty = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1078", 
            title:              "Use \"\" or 'string.Empty'", 
            messageFormat:      "Use {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1078", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1079</summary>
        public static readonly DiagnosticDescriptor RCS1079_ThrowingOfNewNotImplementedException = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1079", 
            title:              "Throwing of new NotImplementedException", 
            messageFormat:      "Implement the functionality instead of throwing new NotImplementedException", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1079", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1080</summary>
        public static readonly DiagnosticDescriptor RCS1080_UseCountOrLengthPropertyInsteadOfAnyMethod = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1080", 
            title:              "Use 'Count/Length' property instead of 'Any' method", 
            messageFormat:      "Use '{0}' property instead of 'Any' method", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1080", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1081</summary>
        public static readonly DiagnosticDescriptor RCS1081_SplitVariableDeclaration = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1081", 
            title:              "Split variable declaration", 
            messageFormat:      "Split variable declaration", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1081", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1084</summary>
        public static readonly DiagnosticDescriptor RCS1084_UseCoalesceExpressionInsteadOfConditionalExpression = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1084", 
            title:              "Use coalesce expression instead of conditional expression", 
            messageFormat:      "Use coalesce expression instead of conditional expression", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1084", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1085</summary>
        public static readonly DiagnosticDescriptor RCS1085_UseAutoProperty = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1085", 
            title:              "Use auto-implemented property", 
            messageFormat:      "Use auto-implemented property", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1085", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1085_UseAutoPropertyFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1085_UseAutoProperty);

        /// <summary>RCS1089</summary>
        public static readonly DiagnosticDescriptor RCS1089_UseUnaryOperatorInsteadOfAssignment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1089", 
            title:              "Use --/++ operator instead of assignment", 
            messageFormat:      "Use {0} operator instead of assignment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1089", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1089_UseUnaryOperatorInsteadOfAssignmentFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1089_UseUnaryOperatorInsteadOfAssignment);

        /// <summary>RCS1090</summary>
        public static readonly DiagnosticDescriptor RCS1090_ConfigureAwait = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1090", 
            title:              "Add/remove 'ConfigureAwait(false)' call", 
            messageFormat:      "{0} 'ConfigureAwait(false)' call", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1090", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1091</summary>
        public static readonly DiagnosticDescriptor RCS1091_RemoveEmptyRegion = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1091", 
            title:              "[deprecated] Remove empty region", 
            messageFormat:      "([deprecated] Use RCS1259 instead) Remove empty region", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1091", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1091_RemoveEmptyRegionFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1091_RemoveEmptyRegion);

        /// <summary>RCS1093</summary>
        public static readonly DiagnosticDescriptor RCS1093_FileContainsNoCode = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1093", 
            title:              "File contains no code", 
            messageFormat:      "File contains no code", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1093", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1094</summary>
        public static readonly DiagnosticDescriptor RCS1094_DeclareUsingDirectiveOnTopLevel = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1094", 
            title:              "Declare using directive on top level", 
            messageFormat:      "Declare using directive on top level", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1094", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1096</summary>
        public static readonly DiagnosticDescriptor RCS1096_UseHasFlagMethodOrBitwiseOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1096", 
            title:              "Use 'HasFlag' method or bitwise operator", 
            messageFormat:      "Use {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1096", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1097</summary>
        public static readonly DiagnosticDescriptor RCS1097_RemoveRedundantToStringCall = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1097", 
            title:              "Remove redundant 'ToString' call", 
            messageFormat:      "Remove redundant 'ToString' call", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1097", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1098</summary>
        public static readonly DiagnosticDescriptor RCS1098_ConstantValuesShouldBePlacedOnRightSideOfComparisons = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1098", 
            title:              "Constant values should be placed on right side of comparisons", 
            messageFormat:      "Constant values should be placed on right side of comparisons", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1098", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1099</summary>
        public static readonly DiagnosticDescriptor RCS1099_DefaultLabelShouldBeLastLabelInSwitchSection = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1099", 
            title:              "Default label should be the last label in a switch section", 
            messageFormat:      "Move default label to the last position in a switch section", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1099", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1100</summary>
        public static readonly DiagnosticDescriptor RCS1100_FormatDocumentationSummaryOnSingleLine = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1100", 
            title:              "[deprecated] Format documentation summary on a single line", 
            messageFormat:      "([deprecated] Use RCS1253 instead) Format documentation summary on a single line", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1100", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1101</summary>
        public static readonly DiagnosticDescriptor RCS1101_FormatDocumentationSummaryOnMultipleLines = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1101", 
            title:              "[deprecated] Format documentation summary on multiple lines", 
            messageFormat:      "([deprecated] Use RCS1253 instead) Format documentation summary on multiple lines", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1101", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1102</summary>
        public static readonly DiagnosticDescriptor RCS1102_MakeClassStatic = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1102", 
            title:              "Make class static", 
            messageFormat:      "Make class static", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1102", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1103</summary>
        public static readonly DiagnosticDescriptor RCS1103_ConvertIfToAssignment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1103", 
            title:              "Convert 'if' to assignment", 
            messageFormat:      "Convert 'if' to assignment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1103", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1104</summary>
        public static readonly DiagnosticDescriptor RCS1104_SimplifyConditionalExpression = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1104", 
            title:              "Simplify conditional expression", 
            messageFormat:      "Simplify conditional expression", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1104", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1105</summary>
        public static readonly DiagnosticDescriptor RCS1105_UnnecessaryInterpolation = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1105", 
            title:              "Unnecessary interpolation", 
            messageFormat:      "Unnecessary interpolation", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1105", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1106</summary>
        public static readonly DiagnosticDescriptor RCS1106_RemoveEmptyDestructor = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1106", 
            title:              "[deprecated] Remove empty destructor", 
            messageFormat:      "([deprecated] Use RCS1259 instead) Remove empty destructor", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1106", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1107</summary>
        public static readonly DiagnosticDescriptor RCS1107_RemoveRedundantStringToCharArrayCall = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1107", 
            title:              "Remove redundant 'ToCharArray' call", 
            messageFormat:      "Remove redundant 'ToCharArray' call", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1107", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1108</summary>
        public static readonly DiagnosticDescriptor RCS1108_AddStaticModifierToAllPartialClassDeclarations = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1108", 
            title:              "Add 'static' modifier to all partial class declarations", 
            messageFormat:      "Add 'static' modifier to all partial class declarations", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1108", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1110</summary>
        public static readonly DiagnosticDescriptor RCS1110_DeclareTypeInsideNamespace = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1110", 
            title:              "Declare type inside namespace", 
            messageFormat:      "Declare '{0}' inside namespace", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1110", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1111</summary>
        public static readonly DiagnosticDescriptor RCS1111_AddBracesToSwitchSectionWithMultipleStatements = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1111", 
            title:              "Add braces to switch section with multiple statements", 
            messageFormat:      "Add braces to switch section with multiple statements", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1111", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1112</summary>
        public static readonly DiagnosticDescriptor RCS1112_CombineEnumerableWhereMethodChain = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1112", 
            title:              "Combine 'Enumerable.Where' method chain", 
            messageFormat:      "Combine 'Enumerable.Where' method chain", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1112", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1112_CombineEnumerableWhereMethodChainFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1112_CombineEnumerableWhereMethodChain);

        /// <summary>RCS1113</summary>
        public static readonly DiagnosticDescriptor RCS1113_UseStringIsNullOrEmptyMethod = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1113", 
            title:              "Use 'string.IsNullOrEmpty' method", 
            messageFormat:      "Use 'string.IsNullOrEmpty' method", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1113", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1114</summary>
        public static readonly DiagnosticDescriptor RCS1114_RemoveRedundantDelegateCreation = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1114", 
            title:              "Remove redundant delegate creation", 
            messageFormat:      "Remove redundant delegate creation", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1114", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1114_RemoveRedundantDelegateCreationFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1114_RemoveRedundantDelegateCreation);

        /// <summary>RCS1118</summary>
        public static readonly DiagnosticDescriptor RCS1118_MarkLocalVariableAsConst = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1118", 
            title:              "Mark local variable as const", 
            messageFormat:      "Mark local variable as const", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1118", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1123</summary>
        public static readonly DiagnosticDescriptor RCS1123_AddParenthesesWhenNecessary = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1123", 
            title:              "Add parentheses when necessary", 
            messageFormat:      "Add parentheses when necessary", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1123", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1124</summary>
        public static readonly DiagnosticDescriptor RCS1124_InlineLocalVariable = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1124", 
            title:              "Inline local variable", 
            messageFormat:      "Inline local variable", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1124", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1124_InlineLocalVariableFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1124_InlineLocalVariable);

        /// <summary>RCS1126</summary>
        public static readonly DiagnosticDescriptor RCS1126_AddBracesToIfElse = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1126", 
            title:              "Add braces to if-else", 
            messageFormat:      "Add braces to {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1126", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1128</summary>
        public static readonly DiagnosticDescriptor RCS1128_UseCoalesceExpression = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1128", 
            title:              "Use coalesce expression", 
            messageFormat:      "Use coalesce expression", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1128", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1129</summary>
        public static readonly DiagnosticDescriptor RCS1129_RemoveRedundantFieldInitialization = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1129", 
            title:              "Remove redundant field initialization", 
            messageFormat:      "Remove redundant field initialization", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1129", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1130</summary>
        public static readonly DiagnosticDescriptor RCS1130_BitwiseOperationOnEnumWithoutFlagsAttribute = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1130", 
            title:              "Bitwise operation on enum without Flags attribute", 
            messageFormat:      "Bitwise operation on enum without Flags attribute", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1130", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1132</summary>
        public static readonly DiagnosticDescriptor RCS1132_RemoveRedundantOverridingMember = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1132", 
            title:              "Remove redundant overriding member", 
            messageFormat:      "Remove redundant overriding {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1132", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1133</summary>
        public static readonly DiagnosticDescriptor RCS1133_RemoveRedundantDisposeOrCloseCall = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1133", 
            title:              "Remove redundant Dispose/Close call", 
            messageFormat:      "Remove redundant '{0}' call", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1133", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1134</summary>
        public static readonly DiagnosticDescriptor RCS1134_RemoveRedundantStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1134", 
            title:              "Remove redundant statement", 
            messageFormat:      "Remove redundant statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1134", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1135</summary>
        public static readonly DiagnosticDescriptor RCS1135_DeclareEnumMemberWithZeroValue = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1135", 
            title:              "Declare enum member with zero value (when enum has FlagsAttribute)", 
            messageFormat:      "Declare enum member with zero value (when enum has FlagsAttribute)", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1135", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1136</summary>
        public static readonly DiagnosticDescriptor RCS1136_MergeSwitchSectionsWithEquivalentContent = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1136", 
            title:              "Merge switch sections with equivalent content", 
            messageFormat:      "Merge switch sections with equivalent content", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1136", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1138</summary>
        public static readonly DiagnosticDescriptor RCS1138_AddSummaryToDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1138", 
            title:              "Add summary to documentation comment", 
            messageFormat:      "Add summary to documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1138", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1139</summary>
        public static readonly DiagnosticDescriptor RCS1139_AddSummaryElementToDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1139", 
            title:              "Add summary element to documentation comment", 
            messageFormat:      "Add summary element to documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1139", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1140</summary>
        public static readonly DiagnosticDescriptor RCS1140_AddExceptionToDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1140", 
            title:              "Add exception to documentation comment", 
            messageFormat:      "Add exception to documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1140", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1141</summary>
        public static readonly DiagnosticDescriptor RCS1141_AddParamElementToDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1141", 
            title:              "Add 'param' element to documentation comment", 
            messageFormat:      "Add 'param' element to documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1141", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1142</summary>
        public static readonly DiagnosticDescriptor RCS1142_AddTypeParamElementToDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1142", 
            title:              "Add 'typeparam' element to documentation comment", 
            messageFormat:      "Add 'typeparam' element to documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1142", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1143</summary>
        public static readonly DiagnosticDescriptor RCS1143_SimplifyCoalesceExpression = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1143", 
            title:              "Simplify coalesce expression", 
            messageFormat:      "Simplify coalesce expression", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1143", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1145</summary>
        public static readonly DiagnosticDescriptor RCS1145_RemoveRedundantAsOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1145", 
            title:              "Remove redundant 'as' operator", 
            messageFormat:      "Remove redundant 'as' operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1145", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1146</summary>
        public static readonly DiagnosticDescriptor RCS1146_UseConditionalAccess = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1146", 
            title:              "Use conditional access", 
            messageFormat:      "Use conditional access", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1146", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1151</summary>
        public static readonly DiagnosticDescriptor RCS1151_RemoveRedundantCast = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1151", 
            title:              "Remove redundant cast", 
            messageFormat:      "Remove redundant cast", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1151", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1154</summary>
        public static readonly DiagnosticDescriptor RCS1154_SortEnumMembers = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1154", 
            title:              "Sort enum members", 
            messageFormat:      "Sort '{0}' members", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1154", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1155</summary>
        public static readonly DiagnosticDescriptor RCS1155_UseStringComparison = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1155", 
            title:              "Use StringComparison when comparing strings", 
            messageFormat:      "Use StringComparison when comparing strings", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1155", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1156</summary>
        public static readonly DiagnosticDescriptor RCS1156_UseStringLengthInsteadOfComparisonWithEmptyString = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1156", 
            title:              "Use string.Length instead of comparison with empty string", 
            messageFormat:      "Use string.Length instead of comparison with empty string", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1156", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1157</summary>
        public static readonly DiagnosticDescriptor RCS1157_CompositeEnumValueContainsUndefinedFlag = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1157", 
            title:              "Composite enum value contains undefined flag", 
            messageFormat:      "Composite enum value contains undefined flag {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1157", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1158</summary>
        public static readonly DiagnosticDescriptor RCS1158_StaticMemberInGenericTypeShouldUseTypeParameter = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1158", 
            title:              "Static member in generic type should use a type parameter", 
            messageFormat:      "Static member in generic type should use a type parameter", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1158", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1159</summary>
        public static readonly DiagnosticDescriptor RCS1159_UseGenericEventHandler = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1159", 
            title:              "Use EventHandler<T>", 
            messageFormat:      "Use EventHandler<T>", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1159", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1160</summary>
        public static readonly DiagnosticDescriptor RCS1160_AbstractTypeShouldNotHavePublicConstructors = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1160", 
            title:              "Abstract type should not have public constructors", 
            messageFormat:      "Abstract type should not have public constructors", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1160", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1161</summary>
        public static readonly DiagnosticDescriptor RCS1161_EnumShouldDeclareExplicitValues = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1161", 
            title:              "Enum should declare explicit values", 
            messageFormat:      "Enum should declare explicit values", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1161", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1162</summary>
        public static readonly DiagnosticDescriptor RCS1162_AvoidChainOfAssignments = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1162", 
            title:              "Avoid chain of assignments", 
            messageFormat:      "Avoid chain of assignments", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1162", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1163</summary>
        public static readonly DiagnosticDescriptor RCS1163_UnusedParameter = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1163", 
            title:              "Unused parameter", 
            messageFormat:      "Unused parameter '{0}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1163", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1164</summary>
        public static readonly DiagnosticDescriptor RCS1164_UnusedTypeParameter = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1164", 
            title:              "Unused type parameter", 
            messageFormat:      "Unused type parameter '{0}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1164", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1165</summary>
        public static readonly DiagnosticDescriptor RCS1165_UnconstrainedTypeParameterCheckedForNull = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1165", 
            title:              "Unconstrained type parameter checked for null", 
            messageFormat:      "Unconstrained type parameter checked for null", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1165", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1166</summary>
        public static readonly DiagnosticDescriptor RCS1166_ValueTypeObjectIsNeverEqualToNull = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1166", 
            title:              "Value type object is never equal to null", 
            messageFormat:      "Value type object is never equal to null", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1166", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1168</summary>
        public static readonly DiagnosticDescriptor RCS1168_ParameterNameDiffersFromBase = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1168", 
            title:              "Parameter name differs from base name", 
            messageFormat:      "Parameter name '{0}' differs from base name '{1}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1168", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1169</summary>
        public static readonly DiagnosticDescriptor RCS1169_MakeFieldReadOnly = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1169", 
            title:              "Make field read-only", 
            messageFormat:      "Make field read-only", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1169", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1170</summary>
        public static readonly DiagnosticDescriptor RCS1170_UseReadOnlyAutoProperty = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1170", 
            title:              "Use read-only auto-implemented property", 
            messageFormat:      "Use read-only auto-implemented property", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1170", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1171</summary>
        public static readonly DiagnosticDescriptor RCS1171_SimplifyLazyInitialization = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1171", 
            title:              "Simplify lazy initialization", 
            messageFormat:      "Simplify lazy initialization", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1171", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1172</summary>
        public static readonly DiagnosticDescriptor RCS1172_UseIsOperatorInsteadOfAsOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1172", 
            title:              "Use 'is' operator instead of 'as' operator", 
            messageFormat:      "Use 'is' operator instead of 'as' operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1172", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1173</summary>
        public static readonly DiagnosticDescriptor RCS1173_UseCoalesceExpressionInsteadOfIf = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1173", 
            title:              "Use coalesce expression instead of 'if'", 
            messageFormat:      "Use coalesce expression instead of 'if'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1173", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1174</summary>
        public static readonly DiagnosticDescriptor RCS1174_RemoveRedundantAsyncAwait = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1174", 
            title:              "Remove redundant async/await", 
            messageFormat:      "Remove redundant async/await", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1174", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1174_RemoveRedundantAsyncAwaitFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1174_RemoveRedundantAsyncAwait);

        /// <summary>RCS1175</summary>
        public static readonly DiagnosticDescriptor RCS1175_UnusedThisParameter = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1175", 
            title:              "Unused 'this' parameter", 
            messageFormat:      "Unused 'this' parameter '{0}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1175", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1176</summary>
        public static readonly DiagnosticDescriptor RCS1176_UseVarInsteadOfExplicitTypeWhenTypeIsNotObvious = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1176", 
            title:              "[deprecated] Use 'var' instead of explicit type (when the type is not obvious)", 
            messageFormat:      "([deprecated] Use RCS1264 instead) Use 'var' instead of explicit type", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1176", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1177</summary>
        public static readonly DiagnosticDescriptor RCS1177_UseVarInsteadOfExplicitTypeInForEach = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1177", 
            title:              "[deprecated] Use 'var' instead of explicit type (in foreach)", 
            messageFormat:      "([deprecated] Use RCS1264 instead) Use 'var' instead of explicit type", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1177", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1179</summary>
        public static readonly DiagnosticDescriptor RCS1179_UnnecessaryAssignment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1179", 
            title:              "Unnecessary assignment", 
            messageFormat:      "Unnecessary assignment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1179", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1180</summary>
        public static readonly DiagnosticDescriptor RCS1180_InlineLazyInitialization = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1180", 
            title:              "Inline lazy initialization", 
            messageFormat:      "Inline lazy initialization", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1180", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1181</summary>
        public static readonly DiagnosticDescriptor RCS1181_ConvertCommentToDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1181", 
            title:              "Convert comment to documentation comment", 
            messageFormat:      "Convert comment to documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1181", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1182</summary>
        public static readonly DiagnosticDescriptor RCS1182_RemoveRedundantBaseInterface = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1182", 
            title:              "Remove redundant base interface", 
            messageFormat:      "Interface '{0}' is already implemented by '{1}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1182", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1186</summary>
        public static readonly DiagnosticDescriptor RCS1186_UseRegexInstanceInsteadOfStaticMethod = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1186", 
            title:              "Use Regex instance instead of static method", 
            messageFormat:      "Use Regex instance instead of static method", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1186", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1187</summary>
        public static readonly DiagnosticDescriptor RCS1187_UseConstantInsteadOfField = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1187", 
            title:              "Use constant instead of field", 
            messageFormat:      "Use constant instead of field", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1187", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1188</summary>
        public static readonly DiagnosticDescriptor RCS1188_RemoveRedundantAutoPropertyInitialization = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1188", 
            title:              "Remove redundant auto-property initialization", 
            messageFormat:      "Remove redundant auto-property initialization", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1188", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1189</summary>
        public static readonly DiagnosticDescriptor RCS1189_AddOrRemoveRegionName = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1189", 
            title:              "Add or remove region name", 
            messageFormat:      "{0} region name {1} #endregion", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1189", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1190</summary>
        public static readonly DiagnosticDescriptor RCS1190_JoinStringExpressions = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1190", 
            title:              "Join string expressions", 
            messageFormat:      "Join string expressions", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1190", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1191</summary>
        public static readonly DiagnosticDescriptor RCS1191_DeclareEnumValueAsCombinationOfNames = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1191", 
            title:              "Declare enum value as combination of names", 
            messageFormat:      "Declare enum value as combination of names", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1191", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1192</summary>
        public static readonly DiagnosticDescriptor RCS1192_UnnecessaryUsageOfVerbatimStringLiteral = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1192", 
            title:              "Unnecessary usage of verbatim string literal", 
            messageFormat:      "Unnecessary usage of verbatim string literal", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1192", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1193</summary>
        public static readonly DiagnosticDescriptor RCS1193_OverridingMemberShouldNotChangeParamsModifier = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1193", 
            title:              "Overriding member should not change 'params' modifier", 
            messageFormat:      "Overriding member should not change 'params' modifier", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1193", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1194</summary>
        public static readonly DiagnosticDescriptor RCS1194_ImplementExceptionConstructors = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1194", 
            title:              "Implement exception constructors", 
            messageFormat:      "Implement exception constructors", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1194", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1195</summary>
        public static readonly DiagnosticDescriptor RCS1195_UseExclusiveOrOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1195", 
            title:              "Use ^ operator", 
            messageFormat:      "Use ^ operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1195", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1196</summary>
        public static readonly DiagnosticDescriptor RCS1196_CallExtensionMethodAsInstanceMethod = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1196", 
            title:              "Call extension method as instance method", 
            messageFormat:      "Call extension method as instance method", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1196", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1197</summary>
        public static readonly DiagnosticDescriptor RCS1197_OptimizeStringBuilderAppendCall = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1197", 
            title:              "Optimize StringBuilder.Append/AppendLine call", 
            messageFormat:      "Optimize StringBuilder.{0} call", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1197", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1198</summary>
        public static readonly DiagnosticDescriptor RCS1198_AvoidBoxingOfValueType = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1198", 
            title:              "Avoid unnecessary boxing of value type", 
            messageFormat:      "Avoid unnecessary boxing of value type", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1198", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1199</summary>
        public static readonly DiagnosticDescriptor RCS1199_UnnecessaryNullCheck = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1199", 
            title:              "Unnecessary null check", 
            messageFormat:      "Unnecessary null check", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1199", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1200</summary>
        public static readonly DiagnosticDescriptor RCS1200_CallThenByInsteadOfOrderBy = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1200", 
            title:              "Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'", 
            messageFormat:      "Call 'Enumerable.ThenBy{0}' instead of 'Enumerable.OrderBy{0}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1200", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1201</summary>
        public static readonly DiagnosticDescriptor RCS1201_UseMethodChaining = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1201", 
            title:              "Use method chaining", 
            messageFormat:      "Use method chaining", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1201", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1202</summary>
        public static readonly DiagnosticDescriptor RCS1202_AvoidNullReferenceException = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1202", 
            title:              "Avoid NullReferenceException", 
            messageFormat:      "Avoid NullReferenceException", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1202", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1203</summary>
        public static readonly DiagnosticDescriptor RCS1203_UseAttributeUsageAttribute = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1203", 
            title:              "Use AttributeUsageAttribute", 
            messageFormat:      "Use AttributeUsageAttribute", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1203", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1204</summary>
        public static readonly DiagnosticDescriptor RCS1204_UseEventArgsEmpty = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1204", 
            title:              "Use EventArgs.Empty", 
            messageFormat:      "Use EventArgs.Empty", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1204", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1205</summary>
        public static readonly DiagnosticDescriptor RCS1205_OrderNamedArguments = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1205", 
            title:              "Order named arguments according to the order of parameters", 
            messageFormat:      "Order named arguments according to the order of parameters", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1205", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1206</summary>
        public static readonly DiagnosticDescriptor RCS1206_UseConditionalAccessInsteadOfConditionalExpression = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1206", 
            title:              "Use conditional access instead of conditional expression", 
            messageFormat:      "Use conditional access instead of conditional expression", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1206", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1207</summary>
        public static readonly DiagnosticDescriptor RCS1207_UseAnonymousFunctionOrMethodGroup = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1207", 
            title:              "Use anonymous function or method group", 
            messageFormat:      "Use {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1207", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1208</summary>
        public static readonly DiagnosticDescriptor RCS1208_ReduceIfNesting = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1208", 
            title:              "Reduce 'if' nesting", 
            messageFormat:      "Reduce 'if' nesting", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1208", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1209</summary>
        public static readonly DiagnosticDescriptor RCS1209_OrderTypeParameterConstraints = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1209", 
            title:              "Order type parameter constraints", 
            messageFormat:      "Order type parameter constraints", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1209", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1210</summary>
        public static readonly DiagnosticDescriptor RCS1210_ReturnCompletedTaskInsteadOfNull = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1210", 
            title:              "Return completed task instead of returning null", 
            messageFormat:      "Return completed task instead of returning null", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1210", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1211</summary>
        public static readonly DiagnosticDescriptor RCS1211_RemoveUnnecessaryElse = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1211", 
            title:              "Remove unnecessary 'else'", 
            messageFormat:      "Remove unnecessary else clause", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1211", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1212</summary>
        public static readonly DiagnosticDescriptor RCS1212_RemoveRedundantAssignment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1212", 
            title:              "Remove redundant assignment", 
            messageFormat:      "Remove redundant assignment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1212", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1212_RemoveRedundantAssignmentFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1212_RemoveRedundantAssignment);

        /// <summary>RCS1213</summary>
        public static readonly DiagnosticDescriptor RCS1213_RemoveUnusedMemberDeclaration = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1213", 
            title:              "Remove unused member declaration", 
            messageFormat:      "Remove unused {0} declaration", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1213", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1214</summary>
        public static readonly DiagnosticDescriptor RCS1214_UnnecessaryInterpolatedString = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1214", 
            title:              "Unnecessary interpolated string", 
            messageFormat:      "Unnecessary interpolated string", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1214", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1214_UnnecessaryInterpolatedStringFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1214_UnnecessaryInterpolatedString);

        /// <summary>RCS1215</summary>
        public static readonly DiagnosticDescriptor RCS1215_ExpressionIsAlwaysEqualToTrueOrFalse = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1215", 
            title:              "Expression is always equal to true/false", 
            messageFormat:      "Expression is always equal to '{0}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1215", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1216</summary>
        public static readonly DiagnosticDescriptor RCS1216_UnnecessaryUnsafeContext = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1216", 
            title:              "Unnecessary unsafe context", 
            messageFormat:      "Unnecessary unsafe context", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1216", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1217</summary>
        public static readonly DiagnosticDescriptor RCS1217_ConvertInterpolatedStringToConcatenation = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1217", 
            title:              "Convert interpolated string to concatenation", 
            messageFormat:      "Convert interpolated string to concatenation", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1217", 
            customTags:         Array.Empty<string>());

        public static readonly DiagnosticDescriptor RCS1217_ConvertInterpolatedStringToConcatenationFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS1217_ConvertInterpolatedStringToConcatenation);

        /// <summary>RCS1218</summary>
        public static readonly DiagnosticDescriptor RCS1218_SimplifyCodeBranching = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1218", 
            title:              "Simplify code branching", 
            messageFormat:      "Simplify code branching", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1218", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1220</summary>
        public static readonly DiagnosticDescriptor RCS1220_UsePatternMatchingInsteadOfIsAndCast = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1220", 
            title:              "Use pattern matching instead of combination of 'is' operator and cast operator", 
            messageFormat:      "Use pattern matching instead of combination of 'is' operator and cast operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1220", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1221</summary>
        public static readonly DiagnosticDescriptor RCS1221_UsePatternMatchingInsteadOfAsAndNullCheck = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1221", 
            title:              "Use pattern matching instead of combination of 'as' operator and null check", 
            messageFormat:      "Use pattern matching instead of combination of 'as' operator and null check", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1221", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1222</summary>
        public static readonly DiagnosticDescriptor RCS1222_MergePreprocessorDirectives = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1222", 
            title:              "Merge preprocessor directives", 
            messageFormat:      "Merge preprocessor directives", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1222", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1223</summary>
        public static readonly DiagnosticDescriptor RCS1223_MarkTypeWithDebuggerDisplayAttribute = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1223", 
            title:              "Mark publicly visible type with DebuggerDisplay attribute", 
            messageFormat:      "Mark '{0}' with DebuggerDisplay attribute", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1223", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1224</summary>
        public static readonly DiagnosticDescriptor RCS1224_MakeMethodExtensionMethod = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1224", 
            title:              "Make method an extension method", 
            messageFormat:      "Make method an extension method", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1224", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1225</summary>
        public static readonly DiagnosticDescriptor RCS1225_MakeClassSealed = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1225", 
            title:              "Make class sealed", 
            messageFormat:      "Make class sealed", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1225", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1226</summary>
        public static readonly DiagnosticDescriptor RCS1226_AddParagraphToDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1226", 
            title:              "Add paragraph to documentation comment", 
            messageFormat:      "Add paragraph to documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1226", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1227</summary>
        public static readonly DiagnosticDescriptor RCS1227_ValidateArgumentsCorrectly = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1227", 
            title:              "Validate arguments correctly", 
            messageFormat:      "Validate arguments correctly", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1227", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1228</summary>
        public static readonly DiagnosticDescriptor RCS1228_UnusedElementInDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1228", 
            title:              "Unused element in a documentation comment", 
            messageFormat:      "Unused '{0}' element in a documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1228", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1229</summary>
        public static readonly DiagnosticDescriptor RCS1229_UseAsyncAwait = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1229", 
            title:              "Use async/await when necessary", 
            messageFormat:      "Use async/await when necessary", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1229", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1230</summary>
        public static readonly DiagnosticDescriptor RCS1230_UnnecessaryExplicitUseOfEnumerator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1230", 
            title:              "Unnecessary explicit use of enumerator", 
            messageFormat:      "Unnecessary explicit use of enumerator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1230", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1231</summary>
        public static readonly DiagnosticDescriptor RCS1231_MakeParameterRefReadOnly = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1231", 
            title:              "Make parameter ref read-only", 
            messageFormat:      "Make parameter ref read-only", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1231", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1232</summary>
        public static readonly DiagnosticDescriptor RCS1232_OrderElementsInDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1232", 
            title:              "Order elements in documentation comment", 
            messageFormat:      "Order elements in documentation comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1232", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1233</summary>
        public static readonly DiagnosticDescriptor RCS1233_UseShortCircuitingOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1233", 
            title:              "Use short-circuiting operator", 
            messageFormat:      "Use short-circuiting operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1233", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1234</summary>
        public static readonly DiagnosticDescriptor RCS1234_DuplicateEnumValue = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1234", 
            title:              "Duplicate enum value", 
            messageFormat:      "Duplicate enum value", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1234", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1235</summary>
        public static readonly DiagnosticDescriptor RCS1235_OptimizeMethodCall = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1235", 
            title:              "Optimize method call", 
            messageFormat:      "Optimize '{0}' call", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1235", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1236</summary>
        public static readonly DiagnosticDescriptor RCS1236_UseExceptionFilter = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1236", 
            title:              "Use exception filter", 
            messageFormat:      "Use exception filter", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1236", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1237</summary>
        public static readonly DiagnosticDescriptor RCS1237_UseBitShiftOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1237", 
            title:              "[deprecated] Use bit shift operator", 
            messageFormat:      "([deprecated] Use RCS1254 instead) Use bit shift operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1237", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1238</summary>
        public static readonly DiagnosticDescriptor RCS1238_AvoidNestedConditionalOperators = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1238", 
            title:              "Avoid nested ?: operators", 
            messageFormat:      "Avoid nested ?: operators", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1238", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1239</summary>
        public static readonly DiagnosticDescriptor RCS1239_UseForStatementInsteadOfWhileStatement = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1239", 
            title:              "Use 'for' statement instead of 'while' statement", 
            messageFormat:      "Use 'for' statement instead of 'while' statement", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1239", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1240</summary>
        public static readonly DiagnosticDescriptor RCS1240_UnnecessaryOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1240", 
            title:              "Operator is unnecessary", 
            messageFormat:      "The '{0}' operator is unnecessary", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1240", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1241</summary>
        public static readonly DiagnosticDescriptor RCS1241_ImplementNonGenericCounterpart = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1241", 
            title:              "Implement non-generic counterpart", 
            messageFormat:      "Implement {0} when implementing {1}<T>", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1241", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1242</summary>
        public static readonly DiagnosticDescriptor RCS1242_DoNotPassNonReadOnlyStructByReadOnlyReference = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1242", 
            title:              "Do not pass non-read-only struct by read-only reference", 
            messageFormat:      "Do not pass non-read-only struct by read-only reference", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1242", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1243</summary>
        public static readonly DiagnosticDescriptor RCS1243_DuplicateWordInComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1243", 
            title:              "Duplicate word in a comment", 
            messageFormat:      "Duplicate word in a comment", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1243", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1244</summary>
        public static readonly DiagnosticDescriptor RCS1244_SimplifyDefaultExpression = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1244", 
            title:              "Simplify 'default' expression", 
            messageFormat:      "Simplify 'default' expression", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1244", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1246</summary>
        public static readonly DiagnosticDescriptor RCS1246_UseElementAccess = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1246", 
            title:              "Use element access", 
            messageFormat:      "Use element access", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1246", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1247</summary>
        public static readonly DiagnosticDescriptor RCS1247_FixDocumentationCommentTag = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1247", 
            title:              "Fix documentation comment tag", 
            messageFormat:      "Fix documentation comment tag", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1247", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1248</summary>
        public static readonly DiagnosticDescriptor RCS1248_NormalizeNullCheck = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1248", 
            title:              "Normalize null check", 
            messageFormat:      "Use {0} to check for null", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1248", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1249</summary>
        public static readonly DiagnosticDescriptor RCS1249_UnnecessaryNullForgivingOperator = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1249", 
            title:              "Unnecessary null-forgiving operator", 
            messageFormat:      "Unnecessary null-forgiving operator", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1249", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1250</summary>
        public static readonly DiagnosticDescriptor RCS1250_UseImplicitOrExplicitObjectCreation = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1250", 
            title:              "Use implicit/explicit object creation", 
            messageFormat:      "{0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1250", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1251</summary>
        public static readonly DiagnosticDescriptor RCS1251_RemoveUnnecessaryBraces = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1251", 
            title:              "Remove unnecessary braces from record declaration", 
            messageFormat:      "Remove unnecessary braces", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1251", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1252</summary>
        public static readonly DiagnosticDescriptor RCS1252_NormalizeUsageOfInfiniteLoop = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1252", 
            title:              "Normalize usage of infinite loop", 
            messageFormat:      "Use '{0}' statement as an infinite loop", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1252", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1253</summary>
        public static readonly DiagnosticDescriptor RCS1253_FormatDocumentationCommentSummary = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1253", 
            title:              "Format documentation comment summary", 
            messageFormat:      "Format documentation comment summary", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1253", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1254</summary>
        public static readonly DiagnosticDescriptor RCS1254_NormalizeFormatOfEnumFlagValue = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1254", 
            title:              "Normalize format of enum flag value", 
            messageFormat:      "{0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1254", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1255</summary>
        public static readonly DiagnosticDescriptor RCS1255_SimplifyArgumentNullCheck = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1255", 
            title:              "Simplify argument null check", 
            messageFormat:      "Simplify argument null check", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1255", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1256</summary>
        public static readonly DiagnosticDescriptor RCS1256_InvalidArgumentNullCheck = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1256", 
            title:              "Invalid argument null check", 
            messageFormat:      "Invalid argument null check", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1256", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1257</summary>
        public static readonly DiagnosticDescriptor RCS1257_UseEnumFieldExplicitly = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1257", 
            title:              "Use enum field explicitly", 
            messageFormat:      "Use enum field explicitly", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1257", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1258</summary>
        public static readonly DiagnosticDescriptor RCS1258_UnnecessaryEnumFlag = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1258", 
            title:              "Unnecessary enum flag", 
            messageFormat:      "Enum flag '{0}' is already contained in flag '{1}'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1258", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1259</summary>
        public static readonly DiagnosticDescriptor RCS1259_RemoveEmptySyntax = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1259", 
            title:              "Remove empty syntax", 
            messageFormat:      "Remove empty {0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1259", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1260</summary>
        public static readonly DiagnosticDescriptor RCS1260_AddOrRemoveTrailingComma = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1260", 
            title:              "Add/remove trailing comma", 
            messageFormat:      "{0} trailing comma", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1260", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1261</summary>
        public static readonly DiagnosticDescriptor RCS1261_DisposeResourceAsynchronously = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1261", 
            title:              "Resource can be disposed asynchronously", 
            messageFormat:      "Resource can be disposed asynchronously", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1261", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1262</summary>
        public static readonly DiagnosticDescriptor RCS1262_UnnecessaryRawStringLiteral = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1262", 
            title:              "Unnecessary raw string literal", 
            messageFormat:      "Unnecessary raw string literal", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1262", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS1263</summary>
        public static readonly DiagnosticDescriptor RCS1263_InvalidReferenceInDocumentationComment = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1263", 
            title:              "Invalid reference in a documentation comment", 
            messageFormat:      "{0} '{1}' could not be found", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1263", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1264</summary>
        public static readonly DiagnosticDescriptor RCS1264_UseVarOrExplicitType = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1264", 
            title:              "Use 'var' or explicit type", 
            messageFormat:      "{0}", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: false, 
            description:        null, 
            helpLinkUri:        "RCS1264", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1265</summary>
        public static readonly DiagnosticDescriptor RCS1265_RemoveRedundantCatchBlock = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1265", 
            title:              "Remove redundant catch block", 
            messageFormat:      "Remove redundant catch block", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1265", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1266</summary>
        public static readonly DiagnosticDescriptor RCS1266_UseRawStringLiteral = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1266", 
            title:              "Use raw string literal", 
            messageFormat:      "Use raw string literal", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1266", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1267</summary>
        public static readonly DiagnosticDescriptor RCS1267_UseStringInterpolationInsteadOfStringConcat = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1267", 
            title:              "Use string interpolation instead of 'string.Concat'", 
            messageFormat:      "Use string interpolation instead of 'string.Concat'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1267", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS1268</summary>
        public static readonly DiagnosticDescriptor RCS1268_SimplifyNumericComparison = DiagnosticDescriptorFactory.Create(
            id:                 "RCS1268", 
            title:              "Simplify numeric comparison", 
            messageFormat:      "Simplify numeric comparison", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS1268", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9001</summary>
        public static readonly DiagnosticDescriptor RCS9001_UsePatternMatching = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9001", 
            title:              "Use pattern matching", 
            messageFormat:      "Use pattern matching", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9001", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9002</summary>
        public static readonly DiagnosticDescriptor RCS9002_UsePropertySyntaxNodeSpanStart = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9002", 
            title:              "Use property SyntaxNode.SpanStart", 
            messageFormat:      "Use property SyntaxNode.SpanStart", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9002", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9003</summary>
        public static readonly DiagnosticDescriptor RCS9003_UnnecessaryConditionalAccess = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9003", 
            title:              "Unnecessary conditional access", 
            messageFormat:      "Unnecessary conditional access", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9003", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        public static readonly DiagnosticDescriptor RCS9003_UnnecessaryConditionalAccessFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RCS9003_UnnecessaryConditionalAccess);

        /// <summary>RCS9004</summary>
        public static readonly DiagnosticDescriptor RCS9004_CallAnyInsteadOfAccessingCount = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9004", 
            title:              "Call 'Any' instead of accessing 'Count'", 
            messageFormat:      "Call 'Any' instead of accessing 'Count'", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9004", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9005</summary>
        public static readonly DiagnosticDescriptor RCS9005_UnnecessaryNullCheck = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9005", 
            title:              "Unnecessary null check", 
            messageFormat:      "Unnecessary null check", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9005", 
            customTags:         WellKnownDiagnosticTags.Unnecessary);

        /// <summary>RCS9006</summary>
        public static readonly DiagnosticDescriptor RCS9006_UseElementAccess = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9006", 
            title:              "Use element access", 
            messageFormat:      "Use element access", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9006", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9007</summary>
        public static readonly DiagnosticDescriptor RCS9007_UseReturnValue = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9007", 
            title:              "Use return value", 
            messageFormat:      "Use return value", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9007", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9008</summary>
        public static readonly DiagnosticDescriptor RCS9008_CallLastInsteadOfUsingElementAccess = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9008", 
            title:              "Call 'Last' instead of using []", 
            messageFormat:      "Call 'Last' instead of using []", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9008", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9009</summary>
        public static readonly DiagnosticDescriptor RCS9009_UnknownLanguageName = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9009", 
            title:              "Unknown language name", 
            messageFormat:      "Unknown language name", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Warning, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9009", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9010</summary>
        public static readonly DiagnosticDescriptor RCS9010_SpecifyExportCodeRefactoringProviderAttributeName = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9010", 
            title:              "Specify ExportCodeRefactoringProviderAttribute.Name", 
            messageFormat:      "Specify ExportCodeRefactoringProviderAttribute.Name", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9010", 
            customTags:         Array.Empty<string>());

        /// <summary>RCS9011</summary>
        public static readonly DiagnosticDescriptor RCS9011_SpecifyExportCodeFixProviderAttributeName = DiagnosticDescriptorFactory.Create(
            id:                 "RCS9011", 
            title:              "Specify ExportCodeFixProviderAttribute.Name", 
            messageFormat:      "Specify ExportCodeFixProviderAttribute.Name", 
            category:           DiagnosticCategories.Roslynator, 
            defaultSeverity:    DiagnosticSeverity.Hidden, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        "RCS9011", 
            customTags:         Array.Empty<string>());

    }
}