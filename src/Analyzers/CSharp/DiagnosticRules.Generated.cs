// Copyright (c) .NET Foundation and Contributors. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

using System;
using Microsoft.CodeAnalysis;

namespace Roslynator.CSharp
{
    public static partial class DiagnosticRules
    {
        /// <summary>RCS1001</summary>
        public static readonly DiagnosticDescriptor AddBracesWhenExpressionSpansOverMultipleLines = DiagnosticDescriptors.RCS1001_AddBracesWhenExpressionSpansOverMultipleLines;

        /// <summary>RCS1002</summary>
        public static readonly DiagnosticDescriptor RemoveBraces = DiagnosticDescriptors.RCS1002_RemoveBraces;

        public static readonly DiagnosticDescriptor RemoveBracesFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveBraces);

        /// <summary>RCS1003</summary>
        public static readonly DiagnosticDescriptor AddBracesToIfElseWhenExpressionSpansOverMultipleLines = DiagnosticDescriptors.RCS1003_AddBracesToIfElseWhenExpressionSpansOverMultipleLines;

        /// <summary>RCS1004</summary>
        public static readonly DiagnosticDescriptor RemoveBracesFromIfElse = DiagnosticDescriptors.RCS1004_RemoveBracesFromIfElse;

        public static readonly DiagnosticDescriptor RemoveBracesFromIfElseFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveBracesFromIfElse);

        /// <summary>RCS1005</summary>
        public static readonly DiagnosticDescriptor SimplifyNestedUsingStatement = DiagnosticDescriptors.RCS1005_SimplifyNestedUsingStatement;

        public static readonly DiagnosticDescriptor SimplifyNestedUsingStatementFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(SimplifyNestedUsingStatement);

        /// <summary>RCS1006</summary>
        public static readonly DiagnosticDescriptor MergeElseWithNestedIf = DiagnosticDescriptors.RCS1006_MergeElseWithNestedIf;

        public static readonly DiagnosticDescriptor MergeElseWithNestedIfFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(MergeElseWithNestedIf);

        /// <summary>RCS1007</summary>
        public static readonly DiagnosticDescriptor AddBraces = DiagnosticDescriptors.RCS1007_AddBraces;

        /// <summary>RCS1008</summary>
        public static readonly DiagnosticDescriptor UseExplicitTypeInsteadOfVarWhenTypeIsNotObvious = DiagnosticDescriptors.RCS1008_UseExplicitTypeInsteadOfVarWhenTypeIsNotObvious;

        /// <summary>RCS1009</summary>
        public static readonly DiagnosticDescriptor UseExplicitTypeInsteadOfVarInForEach = DiagnosticDescriptors.RCS1009_UseExplicitTypeInsteadOfVarInForEach;

        /// <summary>RCS1010</summary>
        public static readonly DiagnosticDescriptor UseVarInsteadOfExplicitTypeWhenTypeIsObvious = DiagnosticDescriptors.RCS1010_UseVarInsteadOfExplicitTypeWhenTypeIsObvious;

        /// <summary>RCS1012</summary>
        public static readonly DiagnosticDescriptor UseExplicitTypeInsteadOfVarWhenTypeIsObvious = DiagnosticDescriptors.RCS1012_UseExplicitTypeInsteadOfVarWhenTypeIsObvious;

        /// <summary>RCS1013</summary>
        public static readonly DiagnosticDescriptor UsePredefinedType = DiagnosticDescriptors.RCS1013_UsePredefinedType;

        /// <summary>RCS1014</summary>
        public static readonly DiagnosticDescriptor UseExplicitlyOrImplicitlyTypedArray = DiagnosticDescriptors.RCS1014_UseExplicitlyOrImplicitlyTypedArray;

        /// <summary>RCS1015</summary>
        public static readonly DiagnosticDescriptor UseNameOfOperator = DiagnosticDescriptors.RCS1015_UseNameOfOperator;

        public static readonly DiagnosticDescriptor UseNameOfOperatorFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(UseNameOfOperator);

        /// <summary>RCS1016</summary>
        public static readonly DiagnosticDescriptor UseBlockBodyOrExpressionBody = DiagnosticDescriptors.RCS1016_UseBlockBodyOrExpressionBody;

        /// <summary>RCS1018</summary>
        public static readonly DiagnosticDescriptor AddOrRemoveAccessibilityModifiers = DiagnosticDescriptors.RCS1018_AddOrRemoveAccessibilityModifiers;

        /// <summary>RCS1019</summary>
        public static readonly DiagnosticDescriptor OrderModifiers = DiagnosticDescriptors.RCS1019_OrderModifiers;

        /// <summary>RCS1020</summary>
        public static readonly DiagnosticDescriptor SimplifyNullableOfT = DiagnosticDescriptors.RCS1020_SimplifyNullableOfT;

        /// <summary>RCS1021</summary>
        public static readonly DiagnosticDescriptor ConvertLambdaExpressionBodyToExpressionBody = DiagnosticDescriptors.RCS1021_ConvertLambdaExpressionBodyToExpressionBody;

        public static readonly DiagnosticDescriptor ConvertLambdaExpressionBodyToExpressionBodyFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(ConvertLambdaExpressionBodyToExpressionBody);

        /// <summary>RCS1031</summary>
        public static readonly DiagnosticDescriptor RemoveUnnecessaryBracesInSwitchSection = DiagnosticDescriptors.RCS1031_RemoveUnnecessaryBracesInSwitchSection;

        public static readonly DiagnosticDescriptor RemoveUnnecessaryBracesInSwitchSectionFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveUnnecessaryBracesInSwitchSection);

        /// <summary>RCS1032</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantParentheses = DiagnosticDescriptors.RCS1032_RemoveRedundantParentheses;

        public static readonly DiagnosticDescriptor RemoveRedundantParenthesesFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveRedundantParentheses);

        /// <summary>RCS1033</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantBooleanLiteral = DiagnosticDescriptors.RCS1033_RemoveRedundantBooleanLiteral;

        /// <summary>RCS1034</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantSealedModifier = DiagnosticDescriptors.RCS1034_RemoveRedundantSealedModifier;

        /// <summary>RCS1035</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantCommaInInitializer = DiagnosticDescriptors.RCS1035_RemoveRedundantCommaInInitializer;

        /// <summary>RCS1036</summary>
        public static readonly DiagnosticDescriptor RemoveUnnecessaryBlankLine = DiagnosticDescriptors.RCS1036_RemoveUnnecessaryBlankLine;

        /// <summary>RCS1037</summary>
        public static readonly DiagnosticDescriptor RemoveTrailingWhitespace = DiagnosticDescriptors.RCS1037_RemoveTrailingWhitespace;

        /// <summary>RCS1038</summary>
        public static readonly DiagnosticDescriptor RemoveEmptyStatement = DiagnosticDescriptors.RCS1038_RemoveEmptyStatement;

        /// <summary>RCS1039</summary>
        public static readonly DiagnosticDescriptor RemoveArgumentListFromAttribute = DiagnosticDescriptors.RCS1039_RemoveArgumentListFromAttribute;

        /// <summary>RCS1040</summary>
        public static readonly DiagnosticDescriptor RemoveEmptyElseClause = DiagnosticDescriptors.RCS1040_RemoveEmptyElseClause;

        /// <summary>RCS1041</summary>
        public static readonly DiagnosticDescriptor RemoveEmptyInitializer = DiagnosticDescriptors.RCS1041_RemoveEmptyInitializer;

        /// <summary>RCS1042</summary>
        public static readonly DiagnosticDescriptor RemoveEnumDefaultUnderlyingType = DiagnosticDescriptors.RCS1042_RemoveEnumDefaultUnderlyingType;

        /// <summary>RCS1043</summary>
        public static readonly DiagnosticDescriptor RemovePartialModifierFromTypeWithSinglePart = DiagnosticDescriptors.RCS1043_RemovePartialModifierFromTypeWithSinglePart;

        /// <summary>RCS1044</summary>
        public static readonly DiagnosticDescriptor RemoveOriginalExceptionFromThrowStatement = DiagnosticDescriptors.RCS1044_RemoveOriginalExceptionFromThrowStatement;

        /// <summary>RCS1046</summary>
        public static readonly DiagnosticDescriptor AsynchronousMethodNameShouldEndWithAsync = DiagnosticDescriptors.RCS1046_AsynchronousMethodNameShouldEndWithAsync;

        /// <summary>RCS1047</summary>
        public static readonly DiagnosticDescriptor NonAsynchronousMethodNameShouldNotEndWithAsync = DiagnosticDescriptors.RCS1047_NonAsynchronousMethodNameShouldNotEndWithAsync;

        public static readonly DiagnosticDescriptor NonAsynchronousMethodNameShouldNotEndWithAsyncFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(NonAsynchronousMethodNameShouldNotEndWithAsync);

        /// <summary>RCS1048</summary>
        public static readonly DiagnosticDescriptor UseLambdaExpressionInsteadOfAnonymousMethod = DiagnosticDescriptors.RCS1048_UseLambdaExpressionInsteadOfAnonymousMethod;

        public static readonly DiagnosticDescriptor UseLambdaExpressionInsteadOfAnonymousMethodFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(UseLambdaExpressionInsteadOfAnonymousMethod);

        /// <summary>RCS1049</summary>
        public static readonly DiagnosticDescriptor SimplifyBooleanComparison = DiagnosticDescriptors.RCS1049_SimplifyBooleanComparison;

        public static readonly DiagnosticDescriptor SimplifyBooleanComparisonFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(SimplifyBooleanComparison);

        /// <summary>RCS1050</summary>
        public static readonly DiagnosticDescriptor IncludeParenthesesWhenCreatingNewObject = DiagnosticDescriptors.RCS1050_IncludeParenthesesWhenCreatingNewObject;

        /// <summary>RCS1051</summary>
        public static readonly DiagnosticDescriptor AddOrRemoveParenthesesFromConditionInConditionalOperator = DiagnosticDescriptors.RCS1051_AddOrRemoveParenthesesFromConditionInConditionalOperator;

        /// <summary>RCS1052</summary>
        public static readonly DiagnosticDescriptor DeclareEachAttributeSeparately = DiagnosticDescriptors.RCS1052_DeclareEachAttributeSeparately;

        /// <summary>RCS1055</summary>
        public static readonly DiagnosticDescriptor UnnecessarySemicolonAtEndOfDeclaration = DiagnosticDescriptors.RCS1055_UnnecessarySemicolonAtEndOfDeclaration;

        /// <summary>RCS1056</summary>
        public static readonly DiagnosticDescriptor AvoidUsageOfUsingAliasDirective = DiagnosticDescriptors.RCS1056_AvoidUsageOfUsingAliasDirective;

        /// <summary>RCS1058</summary>
        public static readonly DiagnosticDescriptor UseCompoundAssignment = DiagnosticDescriptors.RCS1058_UseCompoundAssignment;

        public static readonly DiagnosticDescriptor UseCompoundAssignmentFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(UseCompoundAssignment);

        /// <summary>RCS1059</summary>
        public static readonly DiagnosticDescriptor AvoidLockingOnPubliclyAccessibleInstance = DiagnosticDescriptors.RCS1059_AvoidLockingOnPubliclyAccessibleInstance;

        /// <summary>RCS1060</summary>
        public static readonly DiagnosticDescriptor DeclareEachTypeInSeparateFile = DiagnosticDescriptors.RCS1060_DeclareEachTypeInSeparateFile;

        /// <summary>RCS1061</summary>
        public static readonly DiagnosticDescriptor MergeIfWithNestedIf = DiagnosticDescriptors.RCS1061_MergeIfWithNestedIf;

        public static readonly DiagnosticDescriptor MergeIfWithNestedIfFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(MergeIfWithNestedIf);

        /// <summary>RCS1063</summary>
        public static readonly DiagnosticDescriptor AvoidUsageOfDoStatementToCreateInfiniteLoop = DiagnosticDescriptors.RCS1063_AvoidUsageOfDoStatementToCreateInfiniteLoop;

        /// <summary>RCS1064</summary>
        public static readonly DiagnosticDescriptor AvoidUsageOfForStatementToCreateInfiniteLoop = DiagnosticDescriptors.RCS1064_AvoidUsageOfForStatementToCreateInfiniteLoop;

        /// <summary>RCS1065</summary>
        public static readonly DiagnosticDescriptor AvoidUsageOfWhileStatementToCreateInfiniteLoop = DiagnosticDescriptors.RCS1065_AvoidUsageOfWhileStatementToCreateInfiniteLoop;

        /// <summary>RCS1066</summary>
        public static readonly DiagnosticDescriptor RemoveEmptyFinallyClause = DiagnosticDescriptors.RCS1066_RemoveEmptyFinallyClause;

        public static readonly DiagnosticDescriptor RemoveEmptyFinallyClauseFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveEmptyFinallyClause);

        /// <summary>RCS1068</summary>
        public static readonly DiagnosticDescriptor SimplifyLogicalNegation = DiagnosticDescriptors.RCS1068_SimplifyLogicalNegation;

        /// <summary>RCS1069</summary>
        public static readonly DiagnosticDescriptor RemoveUnnecessaryCaseLabel = DiagnosticDescriptors.RCS1069_RemoveUnnecessaryCaseLabel;

        /// <summary>RCS1070</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantDefaultSwitchSection = DiagnosticDescriptors.RCS1070_RemoveRedundantDefaultSwitchSection;

        /// <summary>RCS1071</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantBaseConstructorCall = DiagnosticDescriptors.RCS1071_RemoveRedundantBaseConstructorCall;

        /// <summary>RCS1072</summary>
        public static readonly DiagnosticDescriptor RemoveEmptyNamespaceDeclaration = DiagnosticDescriptors.RCS1072_RemoveEmptyNamespaceDeclaration;

        /// <summary>RCS1073</summary>
        public static readonly DiagnosticDescriptor ConvertIfToReturnStatement = DiagnosticDescriptors.RCS1073_ConvertIfToReturnStatement;

        public static readonly DiagnosticDescriptor ConvertIfToReturnStatementFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(ConvertIfToReturnStatement);

        /// <summary>RCS1074</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantConstructor = DiagnosticDescriptors.RCS1074_RemoveRedundantConstructor;

        /// <summary>RCS1075</summary>
        public static readonly DiagnosticDescriptor AvoidEmptyCatchClauseThatCatchesSystemException = DiagnosticDescriptors.RCS1075_AvoidEmptyCatchClauseThatCatchesSystemException;

        /// <summary>RCS1077</summary>
        public static readonly DiagnosticDescriptor OptimizeLinqMethodCall = DiagnosticDescriptors.RCS1077_OptimizeLinqMethodCall;

        /// <summary>RCS1078</summary>
        public static readonly DiagnosticDescriptor UseEmptyStringLiteralOrStringEmpty = DiagnosticDescriptors.RCS1078_UseEmptyStringLiteralOrStringEmpty;

        /// <summary>RCS1079</summary>
        public static readonly DiagnosticDescriptor ThrowingOfNewNotImplementedException = DiagnosticDescriptors.RCS1079_ThrowingOfNewNotImplementedException;

        /// <summary>RCS1080</summary>
        public static readonly DiagnosticDescriptor UseCountOrLengthPropertyInsteadOfAnyMethod = DiagnosticDescriptors.RCS1080_UseCountOrLengthPropertyInsteadOfAnyMethod;

        /// <summary>RCS1081</summary>
        public static readonly DiagnosticDescriptor SplitVariableDeclaration = DiagnosticDescriptors.RCS1081_SplitVariableDeclaration;

        /// <summary>RCS1084</summary>
        public static readonly DiagnosticDescriptor UseCoalesceExpressionInsteadOfConditionalExpression = DiagnosticDescriptors.RCS1084_UseCoalesceExpressionInsteadOfConditionalExpression;

        /// <summary>RCS1085</summary>
        public static readonly DiagnosticDescriptor UseAutoProperty = DiagnosticDescriptors.RCS1085_UseAutoProperty;

        public static readonly DiagnosticDescriptor UseAutoPropertyFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(UseAutoProperty);

        /// <summary>RCS1089</summary>
        public static readonly DiagnosticDescriptor UseUnaryOperatorInsteadOfAssignment = DiagnosticDescriptors.RCS1089_UseUnaryOperatorInsteadOfAssignment;

        public static readonly DiagnosticDescriptor UseUnaryOperatorInsteadOfAssignmentFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(UseUnaryOperatorInsteadOfAssignment);

        /// <summary>RCS1090</summary>
        public static readonly DiagnosticDescriptor ConfigureAwait = DiagnosticDescriptors.RCS1090_ConfigureAwait;

        /// <summary>RCS1091</summary>
        public static readonly DiagnosticDescriptor RemoveEmptyRegion = DiagnosticDescriptors.RCS1091_RemoveEmptyRegion;

        public static readonly DiagnosticDescriptor RemoveEmptyRegionFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveEmptyRegion);

        /// <summary>RCS1093</summary>
        public static readonly DiagnosticDescriptor FileContainsNoCode = DiagnosticDescriptors.RCS1093_FileContainsNoCode;

        /// <summary>RCS1094</summary>
        public static readonly DiagnosticDescriptor DeclareUsingDirectiveOnTopLevel = DiagnosticDescriptors.RCS1094_DeclareUsingDirectiveOnTopLevel;

        /// <summary>RCS1096</summary>
        public static readonly DiagnosticDescriptor UseHasFlagMethodOrBitwiseOperator = DiagnosticDescriptors.RCS1096_UseHasFlagMethodOrBitwiseOperator;

        /// <summary>RCS1097</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantToStringCall = DiagnosticDescriptors.RCS1097_RemoveRedundantToStringCall;

        /// <summary>RCS1098</summary>
        public static readonly DiagnosticDescriptor ConstantValuesShouldBePlacedOnRightSideOfComparisons = DiagnosticDescriptors.RCS1098_ConstantValuesShouldBePlacedOnRightSideOfComparisons;

        /// <summary>RCS1099</summary>
        public static readonly DiagnosticDescriptor DefaultLabelShouldBeLastLabelInSwitchSection = DiagnosticDescriptors.RCS1099_DefaultLabelShouldBeLastLabelInSwitchSection;

        /// <summary>RCS1100</summary>
        public static readonly DiagnosticDescriptor FormatDocumentationSummaryOnSingleLine = DiagnosticDescriptors.RCS1100_FormatDocumentationSummaryOnSingleLine;

        /// <summary>RCS1101</summary>
        public static readonly DiagnosticDescriptor FormatDocumentationSummaryOnMultipleLines = DiagnosticDescriptors.RCS1101_FormatDocumentationSummaryOnMultipleLines;

        /// <summary>RCS1102</summary>
        public static readonly DiagnosticDescriptor MakeClassStatic = DiagnosticDescriptors.RCS1102_MakeClassStatic;

        /// <summary>RCS1103</summary>
        public static readonly DiagnosticDescriptor ConvertIfToAssignment = DiagnosticDescriptors.RCS1103_ConvertIfToAssignment;

        /// <summary>RCS1104</summary>
        public static readonly DiagnosticDescriptor SimplifyConditionalExpression = DiagnosticDescriptors.RCS1104_SimplifyConditionalExpression;

        /// <summary>RCS1105</summary>
        public static readonly DiagnosticDescriptor UnnecessaryInterpolation = DiagnosticDescriptors.RCS1105_UnnecessaryInterpolation;

        /// <summary>RCS1106</summary>
        public static readonly DiagnosticDescriptor RemoveEmptyDestructor = DiagnosticDescriptors.RCS1106_RemoveEmptyDestructor;

        /// <summary>RCS1107</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantStringToCharArrayCall = DiagnosticDescriptors.RCS1107_RemoveRedundantStringToCharArrayCall;

        /// <summary>RCS1108</summary>
        public static readonly DiagnosticDescriptor AddStaticModifierToAllPartialClassDeclarations = DiagnosticDescriptors.RCS1108_AddStaticModifierToAllPartialClassDeclarations;

        /// <summary>RCS1110</summary>
        public static readonly DiagnosticDescriptor DeclareTypeInsideNamespace = DiagnosticDescriptors.RCS1110_DeclareTypeInsideNamespace;

        /// <summary>RCS1111</summary>
        public static readonly DiagnosticDescriptor AddBracesToSwitchSectionWithMultipleStatements = DiagnosticDescriptors.RCS1111_AddBracesToSwitchSectionWithMultipleStatements;

        /// <summary>RCS1112</summary>
        public static readonly DiagnosticDescriptor CombineEnumerableWhereMethodChain = DiagnosticDescriptors.RCS1112_CombineEnumerableWhereMethodChain;

        public static readonly DiagnosticDescriptor CombineEnumerableWhereMethodChainFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(CombineEnumerableWhereMethodChain);

        /// <summary>RCS1113</summary>
        public static readonly DiagnosticDescriptor UseStringIsNullOrEmptyMethod = DiagnosticDescriptors.RCS1113_UseStringIsNullOrEmptyMethod;

        /// <summary>RCS1114</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantDelegateCreation = DiagnosticDescriptors.RCS1114_RemoveRedundantDelegateCreation;

        public static readonly DiagnosticDescriptor RemoveRedundantDelegateCreationFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveRedundantDelegateCreation);

        /// <summary>RCS1118</summary>
        public static readonly DiagnosticDescriptor MarkLocalVariableAsConst = DiagnosticDescriptors.RCS1118_MarkLocalVariableAsConst;

        /// <summary>RCS1123</summary>
        public static readonly DiagnosticDescriptor AddParenthesesWhenNecessary = DiagnosticDescriptors.RCS1123_AddParenthesesWhenNecessary;

        /// <summary>RCS1124</summary>
        public static readonly DiagnosticDescriptor InlineLocalVariable = DiagnosticDescriptors.RCS1124_InlineLocalVariable;

        public static readonly DiagnosticDescriptor InlineLocalVariableFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(InlineLocalVariable);

        /// <summary>RCS1126</summary>
        public static readonly DiagnosticDescriptor AddBracesToIfElse = DiagnosticDescriptors.RCS1126_AddBracesToIfElse;

        /// <summary>RCS1128</summary>
        public static readonly DiagnosticDescriptor UseCoalesceExpression = DiagnosticDescriptors.RCS1128_UseCoalesceExpression;

        /// <summary>RCS1129</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantFieldInitialization = DiagnosticDescriptors.RCS1129_RemoveRedundantFieldInitialization;

        /// <summary>RCS1130</summary>
        public static readonly DiagnosticDescriptor BitwiseOperationOnEnumWithoutFlagsAttribute = DiagnosticDescriptors.RCS1130_BitwiseOperationOnEnumWithoutFlagsAttribute;

        /// <summary>RCS1132</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantOverridingMember = DiagnosticDescriptors.RCS1132_RemoveRedundantOverridingMember;

        /// <summary>RCS1133</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantDisposeOrCloseCall = DiagnosticDescriptors.RCS1133_RemoveRedundantDisposeOrCloseCall;

        /// <summary>RCS1134</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantStatement = DiagnosticDescriptors.RCS1134_RemoveRedundantStatement;

        /// <summary>RCS1135</summary>
        public static readonly DiagnosticDescriptor DeclareEnumMemberWithZeroValue = DiagnosticDescriptors.RCS1135_DeclareEnumMemberWithZeroValue;

        /// <summary>RCS1136</summary>
        public static readonly DiagnosticDescriptor MergeSwitchSectionsWithEquivalentContent = DiagnosticDescriptors.RCS1136_MergeSwitchSectionsWithEquivalentContent;

        /// <summary>RCS1138</summary>
        public static readonly DiagnosticDescriptor AddSummaryToDocumentationComment = DiagnosticDescriptors.RCS1138_AddSummaryToDocumentationComment;

        /// <summary>RCS1139</summary>
        public static readonly DiagnosticDescriptor AddSummaryElementToDocumentationComment = DiagnosticDescriptors.RCS1139_AddSummaryElementToDocumentationComment;

        /// <summary>RCS1140</summary>
        public static readonly DiagnosticDescriptor AddExceptionToDocumentationComment = DiagnosticDescriptors.RCS1140_AddExceptionToDocumentationComment;

        /// <summary>RCS1141</summary>
        public static readonly DiagnosticDescriptor AddParamElementToDocumentationComment = DiagnosticDescriptors.RCS1141_AddParamElementToDocumentationComment;

        /// <summary>RCS1142</summary>
        public static readonly DiagnosticDescriptor AddTypeParamElementToDocumentationComment = DiagnosticDescriptors.RCS1142_AddTypeParamElementToDocumentationComment;

        /// <summary>RCS1143</summary>
        public static readonly DiagnosticDescriptor SimplifyCoalesceExpression = DiagnosticDescriptors.RCS1143_SimplifyCoalesceExpression;

        /// <summary>RCS1145</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantAsOperator = DiagnosticDescriptors.RCS1145_RemoveRedundantAsOperator;

        /// <summary>RCS1146</summary>
        public static readonly DiagnosticDescriptor UseConditionalAccess = DiagnosticDescriptors.RCS1146_UseConditionalAccess;

        /// <summary>RCS1151</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantCast = DiagnosticDescriptors.RCS1151_RemoveRedundantCast;

        /// <summary>RCS1154</summary>
        public static readonly DiagnosticDescriptor SortEnumMembers = DiagnosticDescriptors.RCS1154_SortEnumMembers;

        /// <summary>RCS1155</summary>
        public static readonly DiagnosticDescriptor UseStringComparison = DiagnosticDescriptors.RCS1155_UseStringComparison;

        /// <summary>RCS1156</summary>
        public static readonly DiagnosticDescriptor UseStringLengthInsteadOfComparisonWithEmptyString = DiagnosticDescriptors.RCS1156_UseStringLengthInsteadOfComparisonWithEmptyString;

        /// <summary>RCS1157</summary>
        public static readonly DiagnosticDescriptor CompositeEnumValueContainsUndefinedFlag = DiagnosticDescriptors.RCS1157_CompositeEnumValueContainsUndefinedFlag;

        /// <summary>RCS1158</summary>
        public static readonly DiagnosticDescriptor StaticMemberInGenericTypeShouldUseTypeParameter = DiagnosticDescriptors.RCS1158_StaticMemberInGenericTypeShouldUseTypeParameter;

        /// <summary>RCS1159</summary>
        public static readonly DiagnosticDescriptor UseGenericEventHandler = DiagnosticDescriptors.RCS1159_UseGenericEventHandler;

        /// <summary>RCS1160</summary>
        public static readonly DiagnosticDescriptor AbstractTypeShouldNotHavePublicConstructors = DiagnosticDescriptors.RCS1160_AbstractTypeShouldNotHavePublicConstructors;

        /// <summary>RCS1161</summary>
        public static readonly DiagnosticDescriptor EnumShouldDeclareExplicitValues = DiagnosticDescriptors.RCS1161_EnumShouldDeclareExplicitValues;

        /// <summary>RCS1162</summary>
        public static readonly DiagnosticDescriptor AvoidChainOfAssignments = DiagnosticDescriptors.RCS1162_AvoidChainOfAssignments;

        /// <summary>RCS1163</summary>
        public static readonly DiagnosticDescriptor UnusedParameter = DiagnosticDescriptors.RCS1163_UnusedParameter;

        /// <summary>RCS1164</summary>
        public static readonly DiagnosticDescriptor UnusedTypeParameter = DiagnosticDescriptors.RCS1164_UnusedTypeParameter;

        /// <summary>RCS1165</summary>
        public static readonly DiagnosticDescriptor UnconstrainedTypeParameterCheckedForNull = DiagnosticDescriptors.RCS1165_UnconstrainedTypeParameterCheckedForNull;

        /// <summary>RCS1166</summary>
        public static readonly DiagnosticDescriptor ValueTypeObjectIsNeverEqualToNull = DiagnosticDescriptors.RCS1166_ValueTypeObjectIsNeverEqualToNull;

        /// <summary>RCS1168</summary>
        public static readonly DiagnosticDescriptor ParameterNameDiffersFromBase = DiagnosticDescriptors.RCS1168_ParameterNameDiffersFromBase;

        /// <summary>RCS1169</summary>
        public static readonly DiagnosticDescriptor MakeFieldReadOnly = DiagnosticDescriptors.RCS1169_MakeFieldReadOnly;

        /// <summary>RCS1170</summary>
        public static readonly DiagnosticDescriptor UseReadOnlyAutoProperty = DiagnosticDescriptors.RCS1170_UseReadOnlyAutoProperty;

        /// <summary>RCS1171</summary>
        public static readonly DiagnosticDescriptor SimplifyLazyInitialization = DiagnosticDescriptors.RCS1171_SimplifyLazyInitialization;

        /// <summary>RCS1172</summary>
        public static readonly DiagnosticDescriptor UseIsOperatorInsteadOfAsOperator = DiagnosticDescriptors.RCS1172_UseIsOperatorInsteadOfAsOperator;

        /// <summary>RCS1173</summary>
        public static readonly DiagnosticDescriptor UseCoalesceExpressionInsteadOfIf = DiagnosticDescriptors.RCS1173_UseCoalesceExpressionInsteadOfIf;

        /// <summary>RCS1174</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantAsyncAwait = DiagnosticDescriptors.RCS1174_RemoveRedundantAsyncAwait;

        public static readonly DiagnosticDescriptor RemoveRedundantAsyncAwaitFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveRedundantAsyncAwait);

        /// <summary>RCS1175</summary>
        public static readonly DiagnosticDescriptor UnusedThisParameter = DiagnosticDescriptors.RCS1175_UnusedThisParameter;

        /// <summary>RCS1176</summary>
        public static readonly DiagnosticDescriptor UseVarInsteadOfExplicitTypeWhenTypeIsNotObvious = DiagnosticDescriptors.RCS1176_UseVarInsteadOfExplicitTypeWhenTypeIsNotObvious;

        /// <summary>RCS1177</summary>
        public static readonly DiagnosticDescriptor UseVarInsteadOfExplicitTypeInForEach = DiagnosticDescriptors.RCS1177_UseVarInsteadOfExplicitTypeInForEach;

        /// <summary>RCS1179</summary>
        public static readonly DiagnosticDescriptor UnnecessaryAssignment = DiagnosticDescriptors.RCS1179_UnnecessaryAssignment;

        /// <summary>RCS1180</summary>
        public static readonly DiagnosticDescriptor InlineLazyInitialization = DiagnosticDescriptors.RCS1180_InlineLazyInitialization;

        /// <summary>RCS1181</summary>
        public static readonly DiagnosticDescriptor ConvertCommentToDocumentationComment = DiagnosticDescriptors.RCS1181_ConvertCommentToDocumentationComment;

        /// <summary>RCS1182</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantBaseInterface = DiagnosticDescriptors.RCS1182_RemoveRedundantBaseInterface;

        /// <summary>RCS1186</summary>
        public static readonly DiagnosticDescriptor UseRegexInstanceInsteadOfStaticMethod = DiagnosticDescriptors.RCS1186_UseRegexInstanceInsteadOfStaticMethod;

        /// <summary>RCS1187</summary>
        public static readonly DiagnosticDescriptor UseConstantInsteadOfField = DiagnosticDescriptors.RCS1187_UseConstantInsteadOfField;

        /// <summary>RCS1188</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantAutoPropertyInitialization = DiagnosticDescriptors.RCS1188_RemoveRedundantAutoPropertyInitialization;

        /// <summary>RCS1189</summary>
        public static readonly DiagnosticDescriptor AddOrRemoveRegionName = DiagnosticDescriptors.RCS1189_AddOrRemoveRegionName;

        /// <summary>RCS1190</summary>
        public static readonly DiagnosticDescriptor JoinStringExpressions = DiagnosticDescriptors.RCS1190_JoinStringExpressions;

        /// <summary>RCS1191</summary>
        public static readonly DiagnosticDescriptor DeclareEnumValueAsCombinationOfNames = DiagnosticDescriptors.RCS1191_DeclareEnumValueAsCombinationOfNames;

        /// <summary>RCS1192</summary>
        public static readonly DiagnosticDescriptor UnnecessaryUsageOfVerbatimStringLiteral = DiagnosticDescriptors.RCS1192_UnnecessaryUsageOfVerbatimStringLiteral;

        /// <summary>RCS1193</summary>
        public static readonly DiagnosticDescriptor OverridingMemberShouldNotChangeParamsModifier = DiagnosticDescriptors.RCS1193_OverridingMemberShouldNotChangeParamsModifier;

        /// <summary>RCS1194</summary>
        public static readonly DiagnosticDescriptor ImplementExceptionConstructors = DiagnosticDescriptors.RCS1194_ImplementExceptionConstructors;

        /// <summary>RCS1195</summary>
        public static readonly DiagnosticDescriptor UseExclusiveOrOperator = DiagnosticDescriptors.RCS1195_UseExclusiveOrOperator;

        /// <summary>RCS1196</summary>
        public static readonly DiagnosticDescriptor CallExtensionMethodAsInstanceMethod = DiagnosticDescriptors.RCS1196_CallExtensionMethodAsInstanceMethod;

        /// <summary>RCS1197</summary>
        public static readonly DiagnosticDescriptor OptimizeStringBuilderAppendCall = DiagnosticDescriptors.RCS1197_OptimizeStringBuilderAppendCall;

        /// <summary>RCS1198</summary>
        public static readonly DiagnosticDescriptor AvoidBoxingOfValueType = DiagnosticDescriptors.RCS1198_AvoidBoxingOfValueType;

        /// <summary>RCS1199</summary>
        public static readonly DiagnosticDescriptor UnnecessaryNullCheck = DiagnosticDescriptors.RCS1199_UnnecessaryNullCheck;

        /// <summary>RCS1200</summary>
        public static readonly DiagnosticDescriptor CallThenByInsteadOfOrderBy = DiagnosticDescriptors.RCS1200_CallThenByInsteadOfOrderBy;

        /// <summary>RCS1201</summary>
        public static readonly DiagnosticDescriptor UseMethodChaining = DiagnosticDescriptors.RCS1201_UseMethodChaining;

        /// <summary>RCS1202</summary>
        public static readonly DiagnosticDescriptor AvoidNullReferenceException = DiagnosticDescriptors.RCS1202_AvoidNullReferenceException;

        /// <summary>RCS1203</summary>
        public static readonly DiagnosticDescriptor UseAttributeUsageAttribute = DiagnosticDescriptors.RCS1203_UseAttributeUsageAttribute;

        /// <summary>RCS1204</summary>
        public static readonly DiagnosticDescriptor UseEventArgsEmpty = DiagnosticDescriptors.RCS1204_UseEventArgsEmpty;

        /// <summary>RCS1205</summary>
        public static readonly DiagnosticDescriptor OrderNamedArguments = DiagnosticDescriptors.RCS1205_OrderNamedArguments;

        /// <summary>RCS1206</summary>
        public static readonly DiagnosticDescriptor UseConditionalAccessInsteadOfConditionalExpression = DiagnosticDescriptors.RCS1206_UseConditionalAccessInsteadOfConditionalExpression;

        /// <summary>RCS1207</summary>
        public static readonly DiagnosticDescriptor UseAnonymousFunctionOrMethodGroup = DiagnosticDescriptors.RCS1207_UseAnonymousFunctionOrMethodGroup;

        /// <summary>RCS1208</summary>
        public static readonly DiagnosticDescriptor ReduceIfNesting = DiagnosticDescriptors.RCS1208_ReduceIfNesting;

        /// <summary>RCS1209</summary>
        public static readonly DiagnosticDescriptor OrderTypeParameterConstraints = DiagnosticDescriptors.RCS1209_OrderTypeParameterConstraints;

        /// <summary>RCS1210</summary>
        public static readonly DiagnosticDescriptor ReturnCompletedTaskInsteadOfNull = DiagnosticDescriptors.RCS1210_ReturnCompletedTaskInsteadOfNull;

        /// <summary>RCS1211</summary>
        public static readonly DiagnosticDescriptor RemoveUnnecessaryElse = DiagnosticDescriptors.RCS1211_RemoveUnnecessaryElse;

        /// <summary>RCS1212</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantAssignment = DiagnosticDescriptors.RCS1212_RemoveRedundantAssignment;

        public static readonly DiagnosticDescriptor RemoveRedundantAssignmentFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(RemoveRedundantAssignment);

        /// <summary>RCS1213</summary>
        public static readonly DiagnosticDescriptor RemoveUnusedMemberDeclaration = DiagnosticDescriptors.RCS1213_RemoveUnusedMemberDeclaration;

        /// <summary>RCS1214</summary>
        public static readonly DiagnosticDescriptor UnnecessaryInterpolatedString = DiagnosticDescriptors.RCS1214_UnnecessaryInterpolatedString;

        public static readonly DiagnosticDescriptor UnnecessaryInterpolatedStringFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(UnnecessaryInterpolatedString);

        /// <summary>RCS1215</summary>
        public static readonly DiagnosticDescriptor ExpressionIsAlwaysEqualToTrueOrFalse = DiagnosticDescriptors.RCS1215_ExpressionIsAlwaysEqualToTrueOrFalse;

        /// <summary>RCS1216</summary>
        public static readonly DiagnosticDescriptor UnnecessaryUnsafeContext = DiagnosticDescriptors.RCS1216_UnnecessaryUnsafeContext;

        /// <summary>RCS1217</summary>
        public static readonly DiagnosticDescriptor ConvertInterpolatedStringToConcatenation = DiagnosticDescriptors.RCS1217_ConvertInterpolatedStringToConcatenation;

        public static readonly DiagnosticDescriptor ConvertInterpolatedStringToConcatenationFadeOut = DiagnosticDescriptorFactory.CreateFadeOut(ConvertInterpolatedStringToConcatenation);

        /// <summary>RCS1218</summary>
        public static readonly DiagnosticDescriptor SimplifyCodeBranching = DiagnosticDescriptors.RCS1218_SimplifyCodeBranching;

        /// <summary>RCS1220</summary>
        public static readonly DiagnosticDescriptor UsePatternMatchingInsteadOfIsAndCast = DiagnosticDescriptors.RCS1220_UsePatternMatchingInsteadOfIsAndCast;

        /// <summary>RCS1221</summary>
        public static readonly DiagnosticDescriptor UsePatternMatchingInsteadOfAsAndNullCheck = DiagnosticDescriptors.RCS1221_UsePatternMatchingInsteadOfAsAndNullCheck;

        /// <summary>RCS1222</summary>
        public static readonly DiagnosticDescriptor MergePreprocessorDirectives = DiagnosticDescriptors.RCS1222_MergePreprocessorDirectives;

        /// <summary>RCS1223</summary>
        public static readonly DiagnosticDescriptor MarkTypeWithDebuggerDisplayAttribute = DiagnosticDescriptors.RCS1223_MarkTypeWithDebuggerDisplayAttribute;

        /// <summary>RCS1224</summary>
        public static readonly DiagnosticDescriptor MakeMethodExtensionMethod = DiagnosticDescriptors.RCS1224_MakeMethodExtensionMethod;

        /// <summary>RCS1225</summary>
        public static readonly DiagnosticDescriptor MakeClassSealed = DiagnosticDescriptors.RCS1225_MakeClassSealed;

        /// <summary>RCS1226</summary>
        public static readonly DiagnosticDescriptor AddParagraphToDocumentationComment = DiagnosticDescriptors.RCS1226_AddParagraphToDocumentationComment;

        /// <summary>RCS1227</summary>
        public static readonly DiagnosticDescriptor ValidateArgumentsCorrectly = DiagnosticDescriptors.RCS1227_ValidateArgumentsCorrectly;

        /// <summary>RCS1228</summary>
        public static readonly DiagnosticDescriptor UnusedElementInDocumentationComment = DiagnosticDescriptors.RCS1228_UnusedElementInDocumentationComment;

        /// <summary>RCS1229</summary>
        public static readonly DiagnosticDescriptor UseAsyncAwait = DiagnosticDescriptors.RCS1229_UseAsyncAwait;

        /// <summary>RCS1230</summary>
        public static readonly DiagnosticDescriptor UnnecessaryExplicitUseOfEnumerator = DiagnosticDescriptors.RCS1230_UnnecessaryExplicitUseOfEnumerator;

        /// <summary>RCS1231</summary>
        public static readonly DiagnosticDescriptor MakeParameterRefReadOnly = DiagnosticDescriptors.RCS1231_MakeParameterRefReadOnly;

        /// <summary>RCS1232</summary>
        public static readonly DiagnosticDescriptor OrderElementsInDocumentationComment = DiagnosticDescriptors.RCS1232_OrderElementsInDocumentationComment;

        /// <summary>RCS1233</summary>
        public static readonly DiagnosticDescriptor UseShortCircuitingOperator = DiagnosticDescriptors.RCS1233_UseShortCircuitingOperator;

        /// <summary>RCS1234</summary>
        public static readonly DiagnosticDescriptor DuplicateEnumValue = DiagnosticDescriptors.RCS1234_DuplicateEnumValue;

        /// <summary>RCS1235</summary>
        public static readonly DiagnosticDescriptor OptimizeMethodCall = DiagnosticDescriptors.RCS1235_OptimizeMethodCall;

        /// <summary>RCS1236</summary>
        public static readonly DiagnosticDescriptor UseExceptionFilter = DiagnosticDescriptors.RCS1236_UseExceptionFilter;

        /// <summary>RCS1237</summary>
        public static readonly DiagnosticDescriptor UseBitShiftOperator = DiagnosticDescriptors.RCS1237_UseBitShiftOperator;

        /// <summary>RCS1238</summary>
        public static readonly DiagnosticDescriptor AvoidNestedConditionalOperators = DiagnosticDescriptors.RCS1238_AvoidNestedConditionalOperators;

        /// <summary>RCS1239</summary>
        public static readonly DiagnosticDescriptor UseForStatementInsteadOfWhileStatement = DiagnosticDescriptors.RCS1239_UseForStatementInsteadOfWhileStatement;

        /// <summary>RCS1240</summary>
        public static readonly DiagnosticDescriptor UnnecessaryOperator = DiagnosticDescriptors.RCS1240_UnnecessaryOperator;

        /// <summary>RCS1241</summary>
        public static readonly DiagnosticDescriptor ImplementNonGenericCounterpart = DiagnosticDescriptors.RCS1241_ImplementNonGenericCounterpart;

        /// <summary>RCS1242</summary>
        public static readonly DiagnosticDescriptor DoNotPassNonReadOnlyStructByReadOnlyReference = DiagnosticDescriptors.RCS1242_DoNotPassNonReadOnlyStructByReadOnlyReference;

        /// <summary>RCS1243</summary>
        public static readonly DiagnosticDescriptor DuplicateWordInComment = DiagnosticDescriptors.RCS1243_DuplicateWordInComment;

        /// <summary>RCS1244</summary>
        public static readonly DiagnosticDescriptor SimplifyDefaultExpression = DiagnosticDescriptors.RCS1244_SimplifyDefaultExpression;

        /// <summary>RCS1246</summary>
        public static readonly DiagnosticDescriptor UseElementAccess = DiagnosticDescriptors.RCS1246_UseElementAccess;

        /// <summary>RCS1247</summary>
        public static readonly DiagnosticDescriptor FixDocumentationCommentTag = DiagnosticDescriptors.RCS1247_FixDocumentationCommentTag;

        /// <summary>RCS1248</summary>
        public static readonly DiagnosticDescriptor NormalizeNullCheck = DiagnosticDescriptors.RCS1248_NormalizeNullCheck;

        /// <summary>RCS1249</summary>
        public static readonly DiagnosticDescriptor UnnecessaryNullForgivingOperator = DiagnosticDescriptors.RCS1249_UnnecessaryNullForgivingOperator;

        /// <summary>RCS1250</summary>
        public static readonly DiagnosticDescriptor UseImplicitOrExplicitObjectCreation = DiagnosticDescriptors.RCS1250_UseImplicitOrExplicitObjectCreation;

        /// <summary>RCS1251</summary>
        public static readonly DiagnosticDescriptor RemoveUnnecessaryBraces = DiagnosticDescriptors.RCS1251_RemoveUnnecessaryBraces;

        /// <summary>RCS1252</summary>
        public static readonly DiagnosticDescriptor NormalizeUsageOfInfiniteLoop = DiagnosticDescriptors.RCS1252_NormalizeUsageOfInfiniteLoop;

        /// <summary>RCS1253</summary>
        public static readonly DiagnosticDescriptor FormatDocumentationCommentSummary = DiagnosticDescriptors.RCS1253_FormatDocumentationCommentSummary;

        /// <summary>RCS1254</summary>
        public static readonly DiagnosticDescriptor NormalizeFormatOfEnumFlagValue = DiagnosticDescriptors.RCS1254_NormalizeFormatOfEnumFlagValue;

        /// <summary>RCS1255</summary>
        public static readonly DiagnosticDescriptor SimplifyArgumentNullCheck = DiagnosticDescriptors.RCS1255_SimplifyArgumentNullCheck;

        /// <summary>RCS1256</summary>
        public static readonly DiagnosticDescriptor InvalidArgumentNullCheck = DiagnosticDescriptors.RCS1256_InvalidArgumentNullCheck;

        /// <summary>RCS1257</summary>
        public static readonly DiagnosticDescriptor UseEnumFieldExplicitly = DiagnosticDescriptors.RCS1257_UseEnumFieldExplicitly;

        /// <summary>RCS1258</summary>
        public static readonly DiagnosticDescriptor UnnecessaryEnumFlag = DiagnosticDescriptors.RCS1258_UnnecessaryEnumFlag;

        /// <summary>RCS1259</summary>
        public static readonly DiagnosticDescriptor RemoveEmptySyntax = DiagnosticDescriptors.RCS1259_RemoveEmptySyntax;

        /// <summary>RCS1260</summary>
        public static readonly DiagnosticDescriptor AddOrRemoveTrailingComma = DiagnosticDescriptors.RCS1260_AddOrRemoveTrailingComma;

        /// <summary>RCS1261</summary>
        public static readonly DiagnosticDescriptor DisposeResourceAsynchronously = DiagnosticDescriptors.RCS1261_DisposeResourceAsynchronously;

        /// <summary>RCS1262</summary>
        public static readonly DiagnosticDescriptor UnnecessaryRawStringLiteral = DiagnosticDescriptors.RCS1262_UnnecessaryRawStringLiteral;

        /// <summary>RCS1263</summary>
        public static readonly DiagnosticDescriptor InvalidReferenceInDocumentationComment = DiagnosticDescriptors.RCS1263_InvalidReferenceInDocumentationComment;

        /// <summary>RCS1264</summary>
        public static readonly DiagnosticDescriptor UseVarOrExplicitType = DiagnosticDescriptors.RCS1264_UseVarOrExplicitType;

        /// <summary>RCS1265</summary>
        public static readonly DiagnosticDescriptor RemoveRedundantCatchBlock = DiagnosticDescriptors.RCS1265_RemoveRedundantCatchBlock;

        /// <summary>RCS1266</summary>
        public static readonly DiagnosticDescriptor UseRawStringLiteral = DiagnosticDescriptors.RCS1266_UseRawStringLiteral;

        /// <summary>RCS1267</summary>
        public static readonly DiagnosticDescriptor UseStringInterpolationInsteadOfStringConcat = DiagnosticDescriptors.RCS1267_UseStringInterpolationInsteadOfStringConcat;

        /// <summary>RCS1268</summary>
        public static readonly DiagnosticDescriptor SimplifyNumericComparison = DiagnosticDescriptors.RCS1268_SimplifyNumericComparison;

    }
}